-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local IliliI1iiiIi1illiil = assert local lIlliiI11IiIlI1iiI1iI = select local illIIl1IilI11illiI1 = tonumber local lIll1Ii11liiII1llIiiI = unpack local iI1llIliili1iI1II1I = pcall local li1i111I1lIIllIiIii = setfenv local ii11I1lIIl11llIil1l = setmetatable local I1l11l1l1iIiill11iI = type local lIlI1iIiiIl1iilll111l = getfenv local ii11I1I1iIl11II11li = tostring local Ii1liIll1ililli1l11 = error local lIlI1l1i1llIIlilI11Il = string.sub local lllI1ill1IIIiI1li1I = string.byte local II1i1I1ii1iI1iIiI1I = string.char local l1II11iiilIlliliI1i = string.rep local IIIiiiIlI1lilillI11 = string.gsub local lIllliiII1I1iIliI1Ill = string.match local lIlIiiI1IIiIli1l1iiII = table.insert local I1ii1III1ii1IlII1i1 = lllI1ill1IIIiI1li1I("c", 1) local IiiIilllli1l11ll1i1, IiilIIli1Iii11II1Ii = #{5737}, #{ 5375, 2889, 3691, 3562, 3578, 2175, 1238, 2064, 5331, 6266, 2082, 5955, 1402, 627, 5534, 3653, 2009, 2020, 2232, 993, 868 } + I1ii1III1ii1IlII1i1 + 130951 local i1i1111i1iliIli1Iii = {} local lIii1l11iIlll11lII1 = 1 local il11lili11liIIiIiII, Ili1IIlIIiiIlIilI11 local function lIl1III1l1i1iIil11Il1(iliIIl1lllI1l1llI1l, ililli1llIl111I1i11) local ii1l1iI1llI1iil1Ili iliIIl1lllI1l1llI1l = IIIiiiIlI1lilillI11(lIlI1l1i1llIIlilI11Il(iliIIl1lllI1l1llI1l, 5), "..", function(lliIIIiI1IIi1liIIli) if lllI1ill1IIIiI1li1I(lliIIIiI1IIi1liIIli, 2) == 72 then ii1l1iI1llI1iil1Ili = illIIl1IilI11illiI1(lIlI1l1i1llIIlilI11Il(lliIIIiI1IIi1liIIli, 1, 1)) return "" else local i1llI1IlIl1IIiiIl1I = II1i1I1ii1iI1iIiI1I(illIIl1IilI11illiI1(lliIIIiI1IIi1liIIli, 16)) if ii1l1iI1llI1iil1Ili then local IIi11iII1I1I1IIIiIl = l1II11iiilIlliliI1i(i1llI1IlIl1IIiiIl1I, ii1l1iI1llI1iil1Ili) ii1l1iI1llI1iil1Ili = nil return IIi11iII1I1I1IIIiIl else return i1llI1IlIl1IIiiIl1I end end end) local function lIli11i1lii11liiII1Ii() local iIiIlli1l1i1Iii1i1i = lllI1ill1IIIiI1li1I(iliIIl1lllI1l1llI1l, lIii1l11iIlll11lII1, lIii1l11iIlll11lII1) lIii1l11iIlll11lII1 = lIii1l11iIlll11lII1 + 1 return iIiIlli1l1i1Iii1i1i end local function lIliiIil1lll1IiiIllIi() local iIiIlli1l1i1Iii1i1i, i1llI1IlIl1IIiiIl1I, IIi11iII1I1I1IIIiIl, liiII1IliIlI1il1ill = lllI1ill1IIIiI1li1I(iliIIl1lllI1l1llI1l, lIii1l11iIlll11lII1, lIii1l11iIlll11lII1 + 3) lIii1l11iIlll11lII1 = lIii1l11iIlll11lII1 + 4 return liiII1IliIlI1il1ill * 16777216 + IIi11iII1I1I1IIIiIl * 65536 + i1llI1IlIl1IIiiIl1I * 256 + iIiIlli1l1i1Iii1i1i end local function Ii11lII1ii111lill1l(liilI11i1l1Il1I111I, lIlIIlill1IllI1II1lil, ilI1IiiilIIIIIlili1) if ilI1IiiilIIIIIlili1 then local i1lIliilIiI1l1lli11, Ii1Illl1lllli11il11 = 0, 0 for II1lli1liIi1lll1Ill = lIlIIlill1IllI1II1lil, ilI1IiiilIIIIIlili1 do i1lIliilIiI1l1lli11 = i1lIliilIiI1l1lli11 + 2 ^ Ii1Illl1lllli11il11 * Ii11lII1ii111lill1l(liilI11i1l1Il1I111I, II1lli1liIi1lll1Ill) Ii1Illl1lllli11il11 = Ii1Illl1lllli11il11 + 1 end return i1lIliilIiI1l1lli11 else local III1IlIl1ll11IIl1ii = 2 ^ (lIlIIlill1IllI1II1lil - 1) return III1IlIl1ll11IIl1ii <= liilI11i1l1Il1I111I % (III1IlIl1ll11IIl1ii + III1IlIl1ll11IIl1ii) and 1 or 0 end end local function IIliIIi1Il11iiIl11I() local iIiIlli1l1i1Iii1i1i, i1llI1IlIl1IIiiIl1I = lIliiIil1lll1IiiIllIi(), lIliiIil1lll1IiiIllIi() if iIiIlli1l1i1Iii1i1i == 0 and i1llI1IlIl1IIiiIl1I == 0 then return 0 end return (-2 * Ii11lII1ii111lill1l(i1llI1IlIl1IIiiIl1I, 32) + 1) * 2 ^ (Ii11lII1ii111lill1l(i1llI1IlIl1IIiiIl1I, 21, 31) - 1023) * ((Ii11lII1ii111lill1l(i1llI1IlIl1IIiiIl1I, 1, 20) * 4294967296 + iIiIlli1l1i1Iii1i1i) / 4503599627370496 + 1) end local lIlill1liiIiIl1il11ll = bit or bit32 local lIl11Iiliili1iIlIIlII = lIlill1liiIiIl1il11ll and lIlill1liiIiIl1il11ll.bxor or function(iIiIlli1l1i1Iii1i1i, i1llI1IlIl1IIiiIl1I) local iii1i1Ili1i1IIi1i1I = 1 local IIi11iII1I1I1IIIiIl = 0 while iIiIlli1l1i1Iii1i1i > 0 and i1llI1IlIl1IIiiIl1I > 0 do local IIlIIIIilli1IllIiIl = iIiIlli1l1i1Iii1i1i % 2 local lIiIiiiIIl1IiI1ii1I = i1llI1IlIl1IIiiIl1I % 2 if IIlIIIIilli1IllIiIl ~= lIiIiiiIIl1IiI1ii1I then IIi11iII1I1I1IIIiIl = IIi11iII1I1I1IIIiIl + iii1i1Ili1i1IIi1i1I end iIiIlli1l1i1Iii1i1i = (iIiIlli1l1i1Iii1i1i - IIlIIIIilli1IllIiIl) / 2 i1llI1IlIl1IIiiIl1I = (i1llI1IlIl1IIiiIl1I - lIiIiiiIIl1IiI1ii1I) / 2 iii1i1Ili1i1IIi1i1I = iii1i1Ili1i1IIi1i1I * 2 end if iIiIlli1l1i1Iii1i1i < i1llI1IlIl1IIiiIl1I then iIiIlli1l1i1Iii1i1i = i1llI1IlIl1IIiiIl1I end while iIiIlli1l1i1Iii1i1i > 0 do local IIlIIIIilli1IllIiIl = iIiIlli1l1i1Iii1i1i % 2 if IIlIIIIilli1IllIiIl > 0 then IIi11iII1I1I1IIIiIl = IIi11iII1I1I1IIIiIl + iii1i1Ili1i1IIi1i1I end iIiIlli1l1i1Iii1i1i = (iIiIlli1l1i1Iii1i1i - IIlIIIIilli1IllIiIl) / 2 iii1i1Ili1i1IIi1i1I = iii1i1Ili1i1IIi1i1I * 2 end return IIi11iII1I1I1IIIiIl end local function lIlli1Il1i1illilii1i1(iiIiil1l1IlIiiiII1l) local lIllI1iliiIlI11i1lIII = { lllI1ill1IIIiI1li1I(iliIIl1lllI1l1llI1l, lIii1l11iIlll11lII1, lIii1l11iIlll11lII1 + 3) } lIii1l11iIlll11lII1 = lIii1l11iIlll11lII1 + 4 local iIiIlli1l1i1Iii1i1i = lIl11Iiliili1iIlIIlII(lIllI1iliiIlI11i1lIII[1], Ili1IIlIIiiIlIilI11) local i1llI1IlIl1IIiiIl1I = lIl11Iiliili1iIlIIlII(lIllI1iliiIlI11i1lIII[2], Ili1IIlIIiiIlIilI11) local IIi11iII1I1I1IIIiIl = lIl11Iiliili1iIlIIlII(lIllI1iliiIlI11i1lIII[3], Ili1IIlIIiiIlIilI11) local liiII1IliIlI1il1ill = lIl11Iiliili1iIlIIlII(lIllI1iliiIlI11i1lIII[4], Ili1IIlIIiiIlIilI11) Ili1IIlIIiiIlIilI11 = (213 * Ili1IIlIIiiIlIilI11 + iiIiil1l1IlIiiiII1l) % 256 return liiII1IliIlI1il1ill * 16777216 + IIi11iII1I1I1IIIiIl * 65536 + i1llI1IlIl1IIiiIl1I * 256 + iIiIlli1l1i1Iii1i1i end local function iIlI1iii111iil1lill(I11liIli1i11IIliiIi) local Ililllilili1I1iilIi = lIliiIil1lll1IiiIllIi() local iill1llII11il11I11I = "" for II1lli1liIi1lll1Ill = IiiIilllli1l11ll1i1, Ililllilili1I1iilIi do iill1llII11il11I11I = iill1llII11il11I11I .. II1i1I1ii1iI1iIiI1I(lIl11Iiliili1iIlIIlII(lllI1ill1IIIiI1li1I(iliIIl1lllI1l1llI1l, lIii1l11iIlll11lII1 + II1lli1liIi1lll1Ill - 1), il11lili11liIIiIiII)) il11lili11liIIiIiII = (I11liIli1i11IIliiIi * il11lili11liIIiIiII + 9) % 256 end lIii1l11iIlll11lII1 = lIii1l11iIlll11lII1 + Ililllilili1I1iilIi return iill1llII11il11I11I end il11lili11liIIiIiII = lIli11i1lii11liiII1Ii() Ili1IIlIIiiIlIilI11 = lIli11i1lii11liiII1Ii() local liI1lII11IiiIiliiI1 = {} for II1lli1liIi1lll1Ill = IiiIilllli1l11ll1i1, lIli11i1lii11liiII1Ii() do local I1ii1ilIllilIiillIi = lIli11i1lii11liiII1Ii() local iiIiiIlIiIiiiIl1iII = (II1lli1liIi1lll1Ill - 1) * 2 liI1lII11IiiIiliiI1[iiIiiIlIiIiiiIl1iII] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, 1, 4) liI1lII11IiiIiliiI1[iiIiiIlIiIiiiIl1iII + 1] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, 5, 8) end local function Il1iI1liliiIi1IilIi() local lIl1i1IiliiIII1Il1l1l = { {}, nil, {}, nil, {}, nil, {} } lIli11i1lii11liiII1Ii() lIliiIil1lll1IiiIllIi() lIl1i1IiliiIII1Il1l1l[2] = lIli11i1lii11liiII1Ii() lIliiIil1lll1IiiIllIi() lIliiIil1lll1IiiIllIi() lIli11i1lii11liiII1Ii() local I1Il1lilI1iIil11Ili = lIliiIil1lll1IiiIllIi() - (#{ 328, 4304, 2136, 4019, 1108, 2845, 4386, 935, 4342, 4023, 3377, 1045, 6236, 3961, 3715, 4425, 2541, 1535, 262, 374, 1267, 4220 } + I1ii1III1ii1IlII1i1 + 133653) local lI11iiiliiil1ii1i11 = lIli11i1lii11liiII1Ii() for II1lli1liIi1lll1Ill = IiiIilllli1l11ll1i1, I1Il1lilI1iIil11Ili do local I1llIlI1i11I1lI11ll = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local I1ii1ilIllilIiillIi = lIlli1Il1i1illilii1i1(lI11iiiliiil1ii1i11) I1llIlI1i11I1lI11ll[6] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, #{ 2161, 1027, 2615, 3431, 5338, 6508, 5631, 5335, 283, 5548 }, #{ 1266, 624, 3262, 1930, 916, 6716, 774, 4991, 6485, 6957, 3382, 4157, 5647, 407, 4588, 5456, 1830, 831 }) I1llIlI1i11I1lI11ll[3] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, #{ 3977, 4458, 6187, 5997, 6288, 4059, 6915, 5972, 2212, 1000, 2120, 3799, 5206, 3084, 436, 5846, 5406, 4800, 6073, 4008, 926, 4706, 4569 } + I1ii1III1ii1IlII1i1 + -95, #{ 3509, 5055, 1850, 6470, 4819, 941, 1328, 5621, 3280, 4960, 6079, 3599, 3768, 6237, 3756, 2551, 3842, 309, 2217, 3605, 503, 979, 5689 } + I1ii1III1ii1IlII1i1 + -90) I1llIlI1i11I1lI11ll[9] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, #{2132}, #{ 58, 6511, 3750, 5558, 4030, 46, 2834, 3270, 641, 6089, 4846, 33, 856, 1929, 5785, 2639, 3700, 4135 }) I1llIlI1i11I1lI11ll[8] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, #{5119}, #{ 1664, 5633, 3725, 602, 904, 5317, 5501, 4204, 2022 }) I1llIlI1i11I1lI11ll[4] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, #{ 4679, 5276, 6785, 4484, 6752, 761, 1108, 5679, 3249, 2651, 4232, 747, 419, 244, 222, 6209, 5584, 4670, 2584 }, #{ 3109, 295, 2665, 336, 3227, 1351, 6497, 976, 1740, 1725, 6396, 5115, 4653, 2893, 6623, 2803, 1486, 5614, 3262, 3900, 1154, 3129 } + I1ii1III1ii1IlII1i1 + -95) I1llIlI1i11I1lI11ll[96426] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, #{5004}, #{ 3678, 3168, 1096, 2320, 6928, 2257, 1960, 4927, 2533 }) I1llIlI1i11I1lI11ll[7763] = Ii11lII1ii111lill1l(I1ii1ilIllilIiillIi, #{ 2075, 5927, 3777, 1985, 6643, 3211, 4815, 4540, 3371, 5656, 4198, 6903, 1727, 4277, 3471, 3692, 5046, 1245, 1445, 3503, 3852, 2453, 919 } + I1ii1III1ii1IlII1i1 + -95, #{ 6857, 3881, 6178, 2454, 6122, 3131, 5039, 4571, 6123, 405, 1217, 854, 1444, 1151, 6143, 6036, 6508, 5991, 3515, 6274, 354, 4581, 4203 } + I1ii1III1ii1IlII1i1 + -90) lIl1i1IiliiIII1Il1l1l[5][II1lli1liIi1lll1Ill] = I1llIlI1i11I1lI11ll end lIli11i1lii11liiII1Ii() lIliiIil1lll1IiiIllIi() local iiiII111illlilIlIll = lIliiIil1lll1IiiIllIi() - (#{ 4278, 5004, 2308, 713, 6429, 6295, 3473, 1918, 4114, 3662, 307, 4509, 4824, 4149, 2199, 2387, 4118, 6924, 5756, 5755, 4079, 3005, 2059, 6099 } + I1ii1III1ii1IlII1i1 + 133628) local liiIl1l1lIllilIIIIl = lIli11i1lii11liiII1Ii() for II1lli1liIi1lll1Ill = IiiIilllli1l11ll1i1, iiiII111illlilIlIll do local iiili1il1l1iIli1iiI local I1l11l1l1iIiill11iI = lIli11i1lii11liiII1Ii() if I1l11l1l1iIiill11iI == #{ 4523, 6185, 1153, 2689, 296, 675, 4141, 4302, 5356, 5460, 6646, 3565, 3747, 6951, 2166, 1886, 3456, 5258, 1007, 2961, 3120, 4831, 3691 } + I1ii1III1ii1IlII1i1 + -91 then iiili1il1l1iIli1iiI = lIlI1l1i1llIIlilI11Il(iIlI1iii111iil1lill(liiIl1l1lIllilIIIIl), #{ 3972, 5682, 2499 }) end if I1l11l1l1iIiill11iI == #{ 2353, 586, 2253, 6660, 1329, 4922, 1043, 3024, 5533, 6743, 6778, 2518, 1674, 6159, 5567, 3414, 4943, 4091, 1836, 5080, 827, 1618 } + I1ii1III1ii1IlII1i1 + 102 then iiili1il1l1iIli1iiI = lIlI1l1i1llIIlilI11Il(iIlI1iii111iil1lill(#{ 2521, 2732, 6026, 6907, 6711, 492, 1114, 4329, 2828, 3905, 4667, 5569, 706, 3396, 4146, 1997, 5264, 152, 63, 6548 } + I1ii1III1ii1IlII1i1 + 1), #{ 935, 2447, 3734, 158, 1545 }) end if I1l11l1l1iIiill11iI == #{ 4473, 3204, 995, 3332, 5896, 882, 1211, 4730, 1736, 6857, 850, 3209, 598, 924, 77, 779, 6616, 2191, 148, 2329, 2142 } + I1ii1III1ii1IlII1i1 + 63 then iiili1il1l1iIli1iiI = #{ 6545, 3692, 146, 4036, 5266, 3246, 6895, 5012, 5278, 1586, 5071, 874, 5957, 5088, 6706, 721, 5316, 6560, 310, 4358 } + I1ii1III1ii1IlII1i1 + 4120 == #{ 4550, 6693, 1807, 4999, 6791, 5446, 2616, 6213, 2819, 1038, 1928, 4931, 5816, 1688, 2900, 6144, 6020, 1496, 1920, 6307, 995, 2781, 2699 } + I1ii1III1ii1IlII1i1 + 114979 end if I1l11l1l1iIiill11iI == #{ 5020, 4305, 2318, 5662, 4247, 4557, 4309, 4166, 6400, 2211, 2464, 1169, 5198, 1543, 4687, 5928, 3990, 1131, 49, 2876 } + I1ii1III1ii1IlII1i1 + 26 then iiili1il1l1iIli1iiI = #{ 4928, 5853, 4291, 6804, 1011, 619, 1023, 3990, 1958, 799, 3754, 6496, 1154, 2577, 4761, 5411, 1168, 4153, 5946, 5991, 5766 } + I1ii1III1ii1IlII1i1 + 45348 == #{ 4928, 5853, 4291, 6804, 1011, 619, 1023, 3990, 1958, 799, 3754, 6496, 1154, 2577, 4761, 5411, 1168, 4153, 5946, 5991, 5766 } + I1ii1III1ii1IlII1i1 + 45348 end if I1l11l1l1iIiill11iI == #{ 3103, 2200, 2828, 1440 } then iiili1il1l1iIli1iiI = IIliIIi1Il11iiIl11I() end if I1l11l1l1iIiill11iI == #{ 2129, 5859, 2803, 5652, 4702, 5060, 2521, 6121, 6484, 4045, 2810, 442, 74, 442, 6931, 5735, 2827, 2001, 6930, 6436, 6809, 3321 } + I1ii1III1ii1IlII1i1 + -54 then iiili1il1l1iIli1iiI = lIlI1l1i1llIIlilI11Il(iIlI1iii111iil1lill(insEncKey), #{ 6316, 5051, 3727, 1845, 6344 }) end if I1l11l1l1iIiill11iI == #{ 1611, 3007, 4168, 1042, 5871, 1818, 2350, 1747, 1772, 4329, 4061, 1613, 282, 5558, 49, 3404, 6065, 845, 77, 170, 1613, 4035, 4573, 1486 } + I1ii1III1ii1IlII1i1 + 24 then iiili1il1l1iIli1iiI = IIliIIi1Il11iiIl11I() end if I1l11l1l1iIiill11iI == #{ 1596, 418, 4580, 5955, 3674, 3375, 1669, 2356, 4617, 5782, 2703, 5423, 4378, 2012, 2234, 1748, 5846, 5972, 733, 3394, 1521, 4442, 1277, 4351 } + I1ii1III1ii1IlII1i1 + 74 then iiili1il1l1iIli1iiI = lIli11i1lii11liiII1Ii() end if I1l11l1l1iIiill11iI == #{ 5442, 256, 4816, 2645, 1806, 3960, 4598, 5221, 3974, 3972, 341, 6185, 1231, 2668, 1757, 3240, 5070, 5495, 1774, 4763, 3342, 4119, 5456 } + I1ii1III1ii1IlII1i1 + 92 then iiili1il1l1iIli1iiI = IIliIIi1Il11iiIl11I() + IIliIIi1Il11iiIl11I() end lIl1i1IiliiIII1Il1l1l[3][II1lli1liIi1lll1Ill - IiiIilllli1l11ll1i1] = iiili1il1l1iIli1iiI end for II1lli1liIi1lll1Ill = IiiIilllli1l11ll1i1, I1Il1lilI1iIil11Ili do local I1llIlI1i11I1lI11ll = lIl1i1IiliiIII1Il1l1l[5][II1lli1liIi1lll1Ill] local lillilii11IIIlllliI = liI1lII11IiiIiliiI1[I1llIlI1i11I1lI11ll[3]] if lillilii11IIIlllliI == #{6197} and I1llIlI1i11I1lI11ll[8] > 255 then I1llIlI1i11I1lI11ll[2] = true I1llIlI1i11I1lI11ll[10] = lIl1i1IiliiIII1Il1l1l[3][I1llIlI1i11I1lI11ll[8] - 256] end if lillilii11IIIlllliI == #{6700, 6061} and I1llIlI1i11I1lI11ll[6] > 255 then I1llIlI1i11I1lI11ll[7] = true I1llIlI1i11I1lI11ll[1] = lIl1i1IiliiIII1Il1l1l[3][I1llIlI1i11I1lI11ll[6] - 256] end if lillilii11IIIlllliI == #{ 989, 3604, 6912 } then if I1llIlI1i11I1lI11ll[8] > 255 then I1llIlI1i11I1lI11ll[2] = true I1llIlI1i11I1lI11ll[10] = lIl1i1IiliiIII1Il1l1l[3][I1llIlI1i11I1lI11ll[8] - 256] end if I1llIlI1i11I1lI11ll[6] > 255 then I1llIlI1i11I1lI11ll[7] = true I1llIlI1i11I1lI11ll[1] = lIl1i1IiliiIII1Il1l1l[3][I1llIlI1i11I1lI11ll[6] - 256] end end if lillilii11IIIlllliI == #{ 5962, 2133, 2945, 1345 } then I1llIlI1i11I1lI11ll[5] = lIl1i1IiliiIII1Il1l1l[3][I1llIlI1i11I1lI11ll[9]] end end local iiiII111illlilIlIll = lIliiIil1lll1IiiIllIi() for II1lli1liIi1lll1Ill = IiiIilllli1l11ll1i1, iiiII111illlilIlIll do lIl1i1IiliiIII1Il1l1l[7][II1lli1liIi1lll1Ill - IiiIilllli1l11ll1i1] = Il1iI1liliiIi1IilIi() end local iiiII111illlilIlIll = lIliiIil1lll1IiiIllIi() for II1lli1liIi1lll1Ill = IiiIilllli1l11ll1i1, iiiII111illlilIlIll do lIl1i1IiliiIII1Il1l1l[1][II1lli1liIi1lll1Ill] = lIliiIil1lll1IiiIllIi() end lIli11i1lii11liiII1Ii() lIli11i1lii11liiII1Ii() lIl1i1IiliiIII1Il1l1l[4] = lIli11i1lii11liiII1Ii() lIli11i1lii11liiII1Ii() lIl1i1IiliiIII1Il1l1l[6] = lIli11i1lii11liiII1Ii() lIliiIil1lll1IiiIllIi() lIliiIil1lll1IiiIllIi() return lIl1i1IiliiIII1Il1l1l end local function I11iil1i1IlllI1Illi(lIl1i1IiliiIII1Il1l1l, ililli1llIl111I1i11, liii11l1Ii1IiliIiI1) local illIIllI111111IiIli, lIlIl1II1I1lIIliilIil = 18, 0 local lIl1IilI1I1iIli1iiiiI = lIl1i1IiliiIII1Il1l1l[5] local lIl1ilIilIIil11iiI11I = 2 local i1lii1lI11lIlllii11 = lIl1i1IiliiIII1Il1l1l[7] local l11I11Illi1ili1iliI = lIl1i1IiliiIII1Il1l1l[4] local il1lIIIIII11I11IIi1 = lIl1i1IiliiIII1Il1l1l[6] local ilIilliiilIIIiI1II1 = 3 local IIiIi11lIIlIilI11li = lIl1i1IiliiIII1Il1l1l[1] local lIl1liliiI1Ill1Iii1ll = 8 local function IIi1iII11I1i1ii1lii(...) local IIlII1liili1IlIl11i = 0 local lIIilIllll1I11illl1 = { lIll1Ii11liiII1llIiiI({}, 1, il1lIIIIII11I11IIi1) } local I1lIIIiiI1lliliiIiI = 1 local i1l1il1iilI11iilIil = {} local lIl1Ii1I1ll1iliiiII1i = {} local ililli1llIl111I1i11 = lIlI1iIiiIl1iilll111l() local lIllii1iIi1li1Iii1ill = { ... } local IIlIIiil11li1I11IlI = #lIllii1iIi1li1Iii1ill - 1 for II1lli1liIi1lll1Ill = 0, IIlIIiil11li1I11IlI do if II1lli1liIi1lll1Ill < l11I11Illi1ili1iliI then lIIilIllll1I11illl1[II1lli1liIi1lll1Ill] = lIllii1iIi1li1Iii1ill[II1lli1liIi1lll1Ill + 1] end end local function lil11ll11ilIl11llI1(...) local IIi11iII1I1I1IIIiIl = lIlliiI11IiIlI1iiI1iI("#", ...) local iii1lII1I1iIili11II = { ... } return IIi11iII1I1I1IIIiIl, iii1lII1I1iIili11II end local function IiIllIiilIIl1l11i1i() while true do local liIii1i1I1li1ll1i11 = lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] local lIlI1i1iIIli1ilii1il1 = liIii1i1I1li1ll1i11[3] I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI + 1 if lIlI1i1iIIli1ilii1il1 >= 9 then if lIlI1i1iIIli1ilii1il1 < 14 then if lIlI1i1iIIli1ilii1il1 < 11 then if lIlI1i1iIIli1ilii1il1 == 10 then local lIlilIlliill1llIiIi1i = liIii1i1I1li1ll1i11[4] local lIllii1iIi1li1Iii1ill = liIii1i1I1li1ll1i11[8] local II11ilI1111i1l11lII = liIii1i1I1li1ll1i11[6] local lIllli1IiIli11i11l1il, Ii1lllIlllIiI1IIIil, IiIllIiilIIl1l11i1i if lIllii1iIi1li1Iii1ill ~= 1 then if lIllii1iIi1li1Iii1ill ~= 0 then Ii1lllIlllIiI1IIIil = lIlilIlliill1llIiIi1i + lIllii1iIi1li1Iii1ill - 1 else Ii1lllIlllIiI1IIIil = IIlII1liili1IlIl11i end Ii1lllIlllIiI1IIIil, lIllli1IiIli11i11l1il = lil11ll11ilIl11llI1(lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i](lIll1Ii11liiII1llIiiI(lIIilIllll1I11illl1, lIlilIlliill1llIiIi1i + 1, Ii1lllIlllIiI1IIIil))) else Ii1lllIlllIiI1IIIil, lIllli1IiIli11i11l1il = lil11ll11ilIl11llI1(lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i]()) end if II11ilI1111i1l11lII ~= 1 then if II11ilI1111i1l11lII ~= 0 then Ii1lllIlllIiI1IIIil = lIlilIlliill1llIiIi1i + II11ilI1111i1l11lII - 2 IIlII1liili1IlIl11i = Ii1lllIlllIiI1IIIil + 1 else Ii1lllIlllIiI1IIIil = Ii1lllIlllIiI1IIIil + lIlilIlliill1llIiIi1i - 1 IIlII1liili1IlIl11i = Ii1lllIlllIiI1IIIil end IiIllIiilIIl1l11i1i = 0 for II1lli1liIi1lll1Ill = lIlilIlliill1llIiIi1i, Ii1lllIlllIiI1IIIil do IiIllIiilIIl1l11i1i = IiIllIiilIIl1l11i1i + 1 lIIilIllll1I11illl1[II1lli1liIi1lll1Ill] = lIllli1IiIli11i11l1il[IiIllIiilIIl1l11i1i] end else IIlII1liili1IlIl11i = lIlilIlliill1llIiIi1i - 1 end for II1lli1liIi1lll1Ill = IIlII1liili1IlIl11i + 1, il1lIIIIII11I11IIi1 do lIIilIllll1I11illl1[II1lli1liIi1lll1Ill] = nil end elseif liIii1i1I1li1ll1i11[6] == 120 then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI - 1 lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] = { [3] = 0, [4] = (liIii1i1I1li1ll1i11[4] - 28) % 256, [8] = (liIii1i1I1li1ll1i11[8] - 28) % 256 } else i1l1il1iilI11iilIil[lIIilIllll1I11illl1] = nil local lIlilIlliill1llIiIi1i = liIii1i1I1li1ll1i11[4] local lIliiiil1l1IiIlilIIii = liIii1i1I1li1ll1i11[8] if lIliiiil1l1IiIlilIIii == 1 then return true end local Ii1lllIlllIiI1IIIil = lIlilIlliill1llIiIi1i + lIliiiil1l1IiIlilIIii - 2 if lIliiiil1l1IiIlilIIii == 0 then Ii1lllIlllIiI1IIIil = IIlII1liili1IlIl11i end return true, lIlilIlliill1llIiIi1i, Ii1lllIlllIiI1IIIil end elseif lIlI1i1iIIli1ilii1il1 >= 12 then if lIlI1i1iIIli1ilii1il1 == 13 then local l1iill1iiill1ll1lIi = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[8]] local IIi11iII1I1I1IIIiIl if liIii1i1I1li1ll1i11[7] then IIi11iII1I1I1IIIiIl = liIii1i1I1li1ll1i11[1] else IIi11iII1I1I1IIIiIl = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[6]] end lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4] + 1] = l1iill1iiill1ll1lIi lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = l1iill1iiill1ll1lIi[IIi11iII1I1I1IIIiIl] else local i1llI1IlIl1IIiiIl1I, IIi11iII1I1I1IIIiIl if liIii1i1I1li1ll1i11[2] then i1llI1IlIl1IIiiIl1I = liIii1i1I1li1ll1i11[10] else i1llI1IlIl1IIiiIl1I = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[8]] end if liIii1i1I1li1ll1i11[7] then IIi11iII1I1I1IIIiIl = liIii1i1I1li1ll1i11[1] else IIi11iII1I1I1IIIiIl = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[6]] end if i1llI1IlIl1IIiiIl1I == IIi11iII1I1I1IIIiIl ~= (liIii1i1I1li1ll1i11[4] ~= 0) then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI + 1 end end else local IIilllIliiiiIiii1ll = i1lii1lI11lIlllii11[liIii1i1I1li1ll1i11[9]] local Iili1li1i1iiiIiiiIi = {} if IIilllIliiiiIiii1ll[lIl1ilIilIIil11iiI11I] > 0 then do local i1Iliii1i1I1l1i1i1I = {} Iili1li1i1iiiIiiiIi = ii11I1lIIl11llIil1l({}, { __index = function(iii1lII1I1iIili11II, il11l11i11I1ii1I11l) local lIlII11i1iiIl1li11i1l = i1Iliii1i1I1l1i1i1I[il11l11i11I1ii1I11l] return lIlII11i1iiIl1li11i1l[1][lIlII11i1iiIl1li11i1l[2]] end, __newindex = function(iii1lII1I1iIili11II, il11l11i11I1ii1I11l, lIlllili1iI11iIl1l1ll) local lIlII11i1iiIl1li11i1l = i1Iliii1i1I1l1i1i1I[il11l11i11I1ii1I11l] lIlII11i1iiIl1li11i1l[1][lIlII11i1iiIl1li11i1l[2]] = lIlllili1iI11iIl1l1ll end }) for II1lli1liIi1lll1Ill = 1, IIilllIliiiiIiii1ll[lIl1ilIilIIil11iiI11I] do local l1IIl1lIIIiii11llIi = lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] if l1IIl1lIIIiii11llIi[ilIilliiilIIIiI1II1] == illIIllI111111IiIli then i1Iliii1i1I1l1i1i1I[II1lli1liIi1lll1Ill - 1] = { lIIilIllll1I11illl1, l1IIl1lIIIiii11llIi[lIl1liliiI1Ill1Iii1ll] } elseif l1IIl1lIIIiii11llIi[ilIilliiilIIIiI1II1] == lIlIl1II1I1lIIliilIil then i1Iliii1i1I1l1i1i1I[II1lli1liIi1lll1Ill - 1] = { liii11l1Ii1IiliIiI1, l1IIl1lIIIiii11llIi[lIl1liliiI1Ill1Iii1ll] } end I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI + 1 end if not i1l1il1iilI11iilIil[lIIilIllll1I11illl1] then i1l1il1iilI11iilIil[lIIilIllll1I11illl1] = {i1Iliii1i1I1l1i1i1I} else lIlIiiI1IIiIli1l1iiII(i1l1il1iilI11iilIil[lIIilIllll1I11illl1], i1Iliii1i1I1l1i1i1I) end end end local l1iIIIIIi1Il1111iIl = I11iil1i1IlllI1Illi(IIilllIliiiiIiii1ll, ililli1llIl111I1i11, Iili1li1i1iiiIiiiIi) lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = l1iIIIIIi1Il1111iIl end elseif lIlI1i1iIIli1ilii1il1 >= 16 then if lIlI1i1iIIli1ilii1il1 < 17 then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI + (liIii1i1I1li1ll1i11[9] - IiilIIli1Iii11II1Ii) elseif lIlI1i1iIIli1ilii1il1 == 18 then lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[8]] elseif liIii1i1I1li1ll1i11[6] == 21 then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI - 1 lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] = { [3] = 9, [4] = (liIii1i1I1li1ll1i11[4] - 126) % 256, [8] = (liIii1i1I1li1ll1i11[8] - 126) % 256 } else local lIliiIlili1iIiIliIIl1 = liIii1i1I1li1ll1i11[4] local lIliIiilI1iillIIliIl1 = {} for l1lIIliIil1Ill1iIli, i1Iliii1i1I1l1i1i1I in pairs(i1l1il1iilI11iilIil[lIIilIllll1I11illl1]) do for l1lIIliIil1Ill1iIli, lIlII11i1iiIl1li11i1l in pairs(i1Iliii1i1I1l1i1i1I) do if lIlII11i1iiIl1li11i1l[1] == lIIilIllll1I11illl1 and lIliiIlili1iIiIliIIl1 <= lIlII11i1iiIl1li11i1l[2] then local lii1Ii11IlIIl1llIll = lIlII11i1iiIl1li11i1l[2] if not lIliIiilI1iillIIliIl1[lii1Ii11IlIIl1llIll] then I11iil1i1IlllI1Illi(lIl1Ii1I1ll1iliiiII1i, lIIilIllll1I11illl1[lii1Ii11IlIIl1llIll]) lIliIiilI1iillIIliIl1[lii1Ii11IlIIl1llIll] = #lIl1Ii1I1ll1iliiiII1i end lIlII11i1iiIl1li11i1l[1] = lIl1Ii1I1ll1iliiiII1i lIlII11i1iiIl1li11i1l[2] = lIliIiilI1iillIIliIl1[lii1Ii11IlIIl1llIll] end end end end elseif lIlI1i1iIIli1ilii1il1 == 15 then if liIii1i1I1li1ll1i11[6] == 247 then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI - 1 lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] = { [3] = 17, [4] = (liIii1i1I1li1ll1i11[4] - 83) % 256, [8] = (liIii1i1I1li1ll1i11[8] - 83) % 256 } else local lIlilIlliill1llIiIi1i = liIii1i1I1li1ll1i11[4] local iiiII111illlilIlIll = liIii1i1I1li1ll1i11[8] local iilii11lli111iiillI = iiiII111illlilIlIll > 0 and iiiII111illlilIlIll - 1 or IIlIIiil11li1I11IlI - l11I11Illi1ili1iliI if iilii11lli111iiillI < 0 then iilii11lli111iiillI = -1 end for II1lli1liIi1lll1Ill = lIlilIlliill1llIiIi1i, lIlilIlliill1llIiIi1i + iilii11lli111iiillI do lIIilIllll1I11illl1[II1lli1liIi1lll1Ill] = lIllii1iIi1li1Iii1ill[l11I11Illi1ili1iliI + (II1lli1liIi1lll1Ill - lIlilIlliill1llIiIi1i) + 1] end if iiiII111illlilIlIll == 0 then IIlII1liili1IlIl11i = lIlilIlliill1llIiIi1i + iilii11lli111iiillI for II1lli1liIi1lll1Ill = IIlII1liili1IlIl11i + 1, il1lIIIIII11I11IIi1 do lIIilIllll1I11illl1[II1lli1liIi1lll1Ill] = nil end end end else lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = liIii1i1I1li1ll1i11[5] end elseif lIlI1i1iIIli1ilii1il1 < 4 then if lIlI1i1iIIli1ilii1il1 >= 2 then if lIlI1i1iIIli1ilii1il1 == 3 then local lIlilIlliill1llIiIi1i = liIii1i1I1li1ll1i11[4] local iiIiiIlIiIiiiIl1iII = lIlilIlliill1llIiIi1i + 2 local lliIli111l1II1iIl1l = { lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i](lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i + 1], lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i + 2]) } for II1lli1liIi1lll1Ill = 1, liIii1i1I1li1ll1i11[6] do lIIilIllll1I11illl1[iiIiiIlIiIiiiIl1iII + II1lli1liIi1lll1Ill] = lliIli111l1II1iIl1l[II1lli1liIi1lll1Ill] end if lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i + 3] ~= nil then lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i + 2] = lIIilIllll1I11illl1[lIlilIlliill1llIiIi1i + 3] else I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI + 1 end elseif liIii1i1I1li1ll1i11[6] == 206 then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI - 1 lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] = { [3] = 18, [4] = (liIii1i1I1li1ll1i11[4] - 28) % 256, [8] = (liIii1i1I1li1ll1i11[8] - 28) % 256 } else lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = #lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[8]] end elseif lIlI1i1iIIli1ilii1il1 ~= 1 then if liIii1i1I1li1ll1i11[6] == 152 then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI - 1 lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] = { [3] = 1, [4] = (liIii1i1I1li1ll1i11[4] - 111) % 256, [8] = (liIii1i1I1li1ll1i11[8] - 111) % 256 } elseif liIii1i1I1li1ll1i11[6] == 220 then I1lIIIiiI1lliliiIiI = I1lIIIiiI1lliliiIiI - 1 lIl1IilI1I1iIli1iiiiI[I1lIIIiiI1lliliiIiI] = { [3] = 3, [4] = (liIii1i1I1li1ll1i11[4] - 151) % 256, [6] = (liIii1i1I1li1ll1i11[8] - 151) % 256 } else lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = liii11l1Ii1IiliIiI1[liIii1i1I1li1ll1i11[8]] end else for II1lli1liIi1lll1Ill = liIii1i1I1li1ll1i11[4], liIii1i1I1li1ll1i11[8] do lIIilIllll1I11illl1[II1lli1liIi1lll1Ill] = nil end end elseif lIlI1i1iIIli1ilii1il1 < 6 then if lIlI1i1iIIli1ilii1il1 == 5 then local i1llI1IlIl1IIiiIl1I, IIi11iII1I1I1IIIiIl if liIii1i1I1li1ll1i11[2] then i1llI1IlIl1IIiiIl1I = liIii1i1I1li1ll1i11[10] else i1llI1IlIl1IIiiIl1I = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[8]] end if liIii1i1I1li1ll1i11[7] then IIi11iII1I1I1IIIiIl = liIii1i1I1li1ll1i11[1] else IIi11iII1I1I1IIIiIl = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[6]] end lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]][i1llI1IlIl1IIiiIl1I] = IIi11iII1I1I1IIIiIl else lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = { lIll1Ii11liiII1llIiiI(i1i1111i1iliIli1Iii, 1, liIii1i1I1li1ll1i11[8] == 0 and 255 or liIii1i1I1li1ll1i11[8]) } end elseif lIlI1i1iIIli1ilii1il1 < 7 then ililli1llIl111I1i11[liIii1i1I1li1ll1i11[5]] = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] elseif lIlI1i1iIIli1ilii1il1 ~= 8 then local IIi11iII1I1I1IIIiIl if liIii1i1I1li1ll1i11[7] then IIi11iII1I1I1IIIiIl = liIii1i1I1li1ll1i11[1] else IIi11iII1I1I1IIIiIl = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[6]] end lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[8]][IIi11iII1I1I1IIIiIl] else lIIilIllll1I11illl1[liIii1i1I1li1ll1i11[4]] = ililli1llIl111I1i11[liIii1i1I1li1ll1i11[5]] end end end local lIl1Illl11Ii1IIiI1lIl, iill1llII11il11I11I, lIliiIlili1iIiIliIIl1, i1lliiIlIiIIIli1IiI = iI1llIliili1iI1II1I(IiIllIiilIIl1l11i1i) if lIl1Illl11Ii1IIiI1lIl then if lIliiIlili1iIiIliIIl1 then return lIll1Ii11liiII1llIiiI(lIIilIllll1I11illl1, lIliiIlili1iIiIliIIl1, i1lliiIlIiIIIli1IiI) end else Ii1liIll1ililli1l11("Luraph Script:" .. (IIiIi11lIIlIilI11li[I1lIIIiiI1lliliiIiI - 1] or "") .. ": " .. ii11I1I1iIl11II11li(iill1llII11il11I11I), 0) end end li1i111I1lIIllIiIii(IIi1iII11I1i1ii1lii, ililli1llIl111I1i11) return IIi1iII11I1i1ii1lii end local lIliIiilI1iillIIliIl1 = Il1iI1liliiIi1IilIi() return I11iil1i1IlllI1Illi(lIliIiilI1iillIIliIl1, ililli1llIl111I1i11)() end lIl1III1l1i1iIil11IllIlI1iIiiIl1iilll111l()) 
