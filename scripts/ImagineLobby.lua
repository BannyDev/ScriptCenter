-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local ii111lI1iilIlIlII1l = assert local lIiIIIlii1lIliIii11 = select local l1liIl1lIillilIl1Ii = tonumber local lIli1I1I1iiIiIilii1iI = unpack local lIli1iI1lIlIiliI1l11I = pcall local lIl1I1ll1iIiIIiI1I1iI = setfenv local lIlIIl1Ii1IIlil11iIli = setmetatable local i111I11li1111i1lIiI = type local lIlIIli1111lliiI1Iili = getfenv local I1iIIliiIi1lIl1l111 = tostring local lIl11llI1II1ilIlIi1ii = error local l1I1I11llI1IIIIill1 = string.sub local IIIIlll1iI1111I1il1 = string.byte local ll1illl1Iliiillli1i = string.char local lIll1ililllii1I11Ill1 = string.rep local lIl1111lii1iI1i1iII1I = string.gsub local IlII1I1IIi11i11i1i1 = string.match local iiiIiiiiiI1IIllilli = table.insert local iiIII11Il1liil1iI1l = IIIIlll1iI1111I1il1("~", 1) local llilllIIiiIl111lIii, illIiiii1lllIiiiiil = #{1688}, #{ 6724, 6806, 2829, 1133, 2928, 5743, 6280, 2833, 3915, 4669, 1696, 3366, 2252, 2884, 6171, 5370, 5526, 4374, 2758, 4305, 2648, 2197, 5493, 498 } + iiIII11Il1liil1iI1l + 130921 local lIl1i1illiiIIl1ii1Iii = {} local ilil1lIlliiIliilill = 1 local lIllI1lIlIllil1Il1III, lIll1liII111llIlIl1Ii local function lIlIl1il1Ii1lIiIII1lI(lIlIIili11I11iIlIIlii, lIll111iIIIiI1Ii1Ilii) local IIll111lllliI11Iil1 lIlIIili11I11iIlIIlii = lIl1111lii1iI1i1iII1I(l1I1I11llI1IIIIill1(lIlIIili11I11iIlIIlii, 5), "..", function(illi11I1liIi1lIl1li) if IIIIlll1iI1111I1il1(illi11I1liIi1lIl1li, 2) == 72 then IIll111lllliI11Iil1 = l1liIl1lIillilIl1Ii(l1I1I11llI1IIIIill1(illi11I1liIi1lIl1li, 1, 1)) return "" else local iiii1IlII1IIl11lIi1 = ll1illl1Iliiillli1i(l1liIl1lIillilIl1Ii(illi11I1liIi1lIl1li, 16)) if IIll111lllliI11Iil1 then local l1IIiIiIIIl1iII1Il1 = lIll1ililllii1I11Ill1(iiii1IlII1IIl11lIi1, IIll111lllliI11Iil1) IIll111lllliI11Iil1 = nil return l1IIiIiIIIl1iII1Il1 else return iiii1IlII1IIl11lIi1 end end end) local function lIll1IIIiIiilllliI1II() local Ii1lIIIIi11II1l1lil = IIIIlll1iI1111I1il1(lIlIIili11I11iIlIIlii, ilil1lIlliiIliilill, ilil1lIlliiIliilill) ilil1lIlliiIliilill = ilil1lIlliiIliilill + 1 return Ii1lIIIIi11II1l1lil end local function iIiIlI1I1liIIIl1Iil() local Ii1lIIIIi11II1l1lil, iiii1IlII1IIl11lIi1, l1IIiIiIIIl1iII1Il1, ll1IilI1I1illillill = IIIIlll1iI1111I1il1(lIlIIili11I11iIlIIlii, ilil1lIlliiIliilill, ilil1lIlliiIliilill + 3) ilil1lIlliiIliilill = ilil1lIlliiIliilill + 4 return ll1IilI1I1illillill * 16777216 + l1IIiIiIIIl1iII1Il1 * 65536 + iiii1IlII1IIl11lIi1 * 256 + Ii1lIIIIi11II1l1lil end local function IIIIi1Iiiili1ii1IIi(iiiII1I1i11IlI1llii, Ii1lIIl1l111lIilllI, llIl1iIlllilIiiIlll) if llIl1iIlllilIiiIlll then local lIliiiIiiIl11iiI1I1l1, Ii1111l1I1IlIlIIl1i = 0, 0 for lIlllI1iil1l11iIlII11 = Ii1lIIl1l111lIilllI, llIl1iIlllilIiiIlll do lIliiiIiiIl11iiI1I1l1 = lIliiiIiiIl11iiI1I1l1 + 2 ^ Ii1111l1I1IlIlIIl1i * IIIIi1Iiiili1ii1IIi(iiiII1I1i11IlI1llii, lIlllI1iil1l11iIlII11) Ii1111l1I1IlIlIIl1i = Ii1111l1I1IlIlIIl1i + 1 end return lIliiiIiiIl11iiI1I1l1 else local lIliIIl1I1Ii1lIIIIlIi = 2 ^ (Ii1lIIl1l111lIilllI - 1) return lIliIIl1I1Ii1lIIIIlIi <= iiiII1I1i11IlI1llii % (lIliIIl1I1Ii1lIIIIlIi + lIliIIl1I1Ii1lIIIIlIi) and 1 or 0 end end local function IIliii1liililIll1Ii() local Ii1lIIIIi11II1l1lil, iiii1IlII1IIl11lIi1 = iIiIlI1I1liIIIl1Iil(), iIiIlI1I1liIIIl1Iil() if Ii1lIIIIi11II1l1lil == 0 and iiii1IlII1IIl11lIi1 == 0 then return 0 end return (-2 * IIIIi1Iiiili1ii1IIi(iiii1IlII1IIl11lIi1, 32) + 1) * 2 ^ (IIIIi1Iiiili1ii1IIi(iiii1IlII1IIl11lIi1, 21, 31) - 1023) * ((IIIIi1Iiiili1ii1IIi(iiii1IlII1IIl11lIi1, 1, 20) * 4294967296 + Ii1lIIIIi11II1l1lil) / 4503599627370496 + 1) end local lIl1iIilI11iiIi1liII1 = bit or bit32 local lIlil1i1i1iI1ililIiiI = lIl1iIilI11iiIi1liII1 and lIl1iIilI11iiIi1liII1.bxor or function(Ii1lIIIIi11II1l1lil, iiii1IlII1IIl11lIi1) local lIli1IllliIIllIIiiI1i = 1 local l1IIiIiIIIl1iII1Il1 = 0 while Ii1lIIIIi11II1l1lil > 0 and iiii1IlII1IIl11lIi1 > 0 do local I1lli1IIli1IIIi1ilI = Ii1lIIIIi11II1l1lil % 2 local IilllilII11111IiIll = iiii1IlII1IIl11lIi1 % 2 if I1lli1IIli1IIIi1ilI ~= IilllilII11111IiIll then l1IIiIiIIIl1iII1Il1 = l1IIiIiIIIl1iII1Il1 + lIli1IllliIIllIIiiI1i end Ii1lIIIIi11II1l1lil = (Ii1lIIIIi11II1l1lil - I1lli1IIli1IIIi1ilI) / 2 iiii1IlII1IIl11lIi1 = (iiii1IlII1IIl11lIi1 - IilllilII11111IiIll) / 2 lIli1IllliIIllIIiiI1i = lIli1IllliIIllIIiiI1i * 2 end if Ii1lIIIIi11II1l1lil < iiii1IlII1IIl11lIi1 then Ii1lIIIIi11II1l1lil = iiii1IlII1IIl11lIi1 end while Ii1lIIIIi11II1l1lil > 0 do local I1lli1IIli1IIIi1ilI = Ii1lIIIIi11II1l1lil % 2 if I1lli1IIli1IIIi1ilI > 0 then l1IIiIiIIIl1iII1Il1 = l1IIiIiIIIl1iII1Il1 + lIli1IllliIIllIIiiI1i end Ii1lIIIIi11II1l1lil = (Ii1lIIIIi11II1l1lil - I1lli1IIli1IIIi1ilI) / 2 lIli1IllliIIllIIiiI1i = lIli1IllliIIllIIiiI1i * 2 end return l1IIiIiIIIl1iII1Il1 end local function l1IIi1il11Il1i111Il(i11ilIl1i1I1lIilill) local IIIlillililIllII11I = { IIIIlll1iI1111I1il1(lIlIIili11I11iIlIIlii, ilil1lIlliiIliilill, ilil1lIlliiIliilill + 3) } ilil1lIlliiIliilill = ilil1lIlliiIliilill + 4 local Ii1lIIIIi11II1l1lil = lIlil1i1i1iI1ililIiiI(IIIlillililIllII11I[1], lIll1liII111llIlIl1Ii) local iiii1IlII1IIl11lIi1 = lIlil1i1i1iI1ililIiiI(IIIlillililIllII11I[2], lIll1liII111llIlIl1Ii) local l1IIiIiIIIl1iII1Il1 = lIlil1i1i1iI1ililIiiI(IIIlillililIllII11I[3], lIll1liII111llIlIl1Ii) local ll1IilI1I1illillill = lIlil1i1i1iI1ililIiiI(IIIlillililIllII11I[4], lIll1liII111llIlIl1Ii) lIll1liII111llIlIl1Ii = (29 * lIll1liII111llIlIl1Ii + i11ilIl1i1I1lIilill) % 256 return ll1IilI1I1illillill * 16777216 + l1IIiIiIIIl1iII1Il1 * 65536 + iiii1IlII1IIl11lIi1 * 256 + Ii1lIIIIi11II1l1lil end local function iIi1iiill1lilI11lli(lIliIIl1illlIlIl1lIIi) local Iill11l1Ill1Il1iiIl = iIiIlI1I1liIIIl1Iil() local l1ll11llillI1iiil1i = "" for lIlllI1iil1l11iIlII11 = llilllIIiiIl111lIii, Iill11l1Ill1Il1iiIl do l1ll11llillI1iiil1i = l1ll11llillI1iiil1i .. ll1illl1Iliiillli1i(lIlil1i1i1iI1ililIiiI(IIIIlll1iI1111I1il1(lIlIIili11I11iIlIIlii, ilil1lIlliiIliilill + lIlllI1iil1l11iIlII11 - 1), lIllI1lIlIllil1Il1III)) lIllI1lIlIllil1Il1III = (lIliIIl1illlIlIl1lIIi * lIllI1lIlIllil1Il1III + 245) % 256 end ilil1lIlliiIliilill = ilil1lIlliiIliilill + Iill11l1Ill1Il1iiIl return l1ll11llillI1iiil1i end lIllI1lIlIllil1Il1III = lIll1IIIiIiilllliI1II() lIll1liII111llIlIl1Ii = lIll1IIIiIiilllliI1II() local liiI1IIi111ll1liiii = {} for lIlllI1iil1l11iIlII11 = llilllIIiiIl111lIii, lIll1IIIiIiilllliI1II() do local lI1IllilIIIIIlllii1 = lIll1IIIiIiilllliI1II() local l1l1llIi1ilIliIlI1l = (lIlllI1iil1l11iIlII11 - 1) * 2 liiI1IIi111ll1liiii[l1l1llIi1ilIliIlI1l] = IIIIi1Iiiili1ii1IIi(lI1IllilIIIIIlllii1, 1, 4) liiI1IIi111ll1liiii[l1l1llIi1ilIliIlI1l + 1] = IIIIi1Iiiili1ii1IIi(lI1IllilIIIIIlllii1, 5, 8) end local function lIlIIlllIilIlii111ili() local lilIliIi1Iill1llIi1 = { nil, {}, {}, {}, {}, nil, nil } iIiIlI1I1liIIIl1Iil() lilIliIi1Iill1llIi1[1] = lIll1IIIiIiilllliI1II() lIll1IIIiIiilllliI1II() lIll1IIIiIiilllliI1II() iIiIlI1I1liIIIl1Iil() lIll1IIIiIiilllliI1II() lIll1IIIiIiilllliI1II() lIll1IIIiIiilllliI1II() local i1lI1llllIIIiil1iiI = iIiIlI1I1liIIIl1Iil() for lIlllI1iil1l11iIlII11 = llilllIIiiIl111lIii, i1lI1llllIIIiil1iiI do lilIliIi1Iill1llIi1[3][lIlllI1iil1l11iIlII11] = iIiIlI1I1liIIIl1Iil() end iIiIlI1I1liIIIl1Iil() iIiIlI1I1liIIIl1Iil() lilIliIi1Iill1llIi1[6] = lIll1IIIiIiilllliI1II() lilIliIi1Iill1llIi1[7] = lIll1IIIiIiilllliI1II() iIiIlI1I1liIIIl1Iil() lIll1IIIiIiilllliI1II() iIiIlI1I1liIIIl1Iil() local i1lI1llllIIIiil1iiI = iIiIlI1I1liIIIl1Iil() - (#{ 6198, 772, 2507, 4666, 6062, 1110, 3633, 380, 3518, 5684, 41, 2791, 3402, 3632, 5093, 6832, 731, 4065, 3553, 2099, 5842 } + iiIII11Il1liil1iI1l + 133566) local lII1II1lilliiiiIlii = lIll1IIIiIiilllliI1II() for lIlllI1iil1l11iIlII11 = llilllIIiiIl111lIii, i1lI1llllIIIiil1iiI do local il1I1lil1i11I1l1lII local i111I11li1111i1lIiI = lIll1IIIiIiilllliI1II() if i111I11li1111i1lIiI == #{ 5336, 360, 2553, 5886, 6461, 2691, 2754, 2268, 2049, 1235, 2334, 527, 5438, 106, 4166, 1701, 4406, 5653, 5673, 776, 5320, 1659, 2996, 2515 } + iiIII11Il1liil1iI1l + -14 then il1I1lil1i11I1l1lII = IIliii1liililIll1Ii() end if i111I11li1111i1lIiI == #{ 453, 1300, 5118, 3221, 6605, 3099, 2962, 951, 5087, 1825, 5686, 679, 3970, 1630, 2171, 5805, 1449, 6280, 1791, 339, 4709, 4087, 6566 } + iiIII11Il1liil1iI1l + 35 then il1I1lil1i11I1l1lII = IIliii1liililIll1Ii() end if i111I11li1111i1lIiI == #{ 4141, 2929, 2176, 6855, 5304, 996, 4284, 6923, 5861, 6947, 683, 6942, 3199, 3971, 1157, 6753, 2967, 373, 6409, 6754 } + iiIII11Il1liil1iI1l + 107 then il1I1lil1i11I1l1lII = #{ 5697, 3285, 3761, 5148, 306, 1650, 3725, 1858, 5992, 6436, 3187, 3595, 2033, 3188, 5611, 5026, 3478, 4331, 4051, 2520, 6939, 6431 } + iiIII11Il1liil1iI1l + 84941 == #{ 5697, 3285, 3761, 5148, 306, 1650, 3725, 1858, 5992, 6436, 3187, 3595, 2033, 3188, 5611, 5026, 3478, 4331, 4051, 2520, 6939, 6431 } + iiIII11Il1liil1iI1l + 84941 end if i111I11li1111i1lIiI == #{ 4385, 6807, 4115, 3082, 5195, 6608, 1543, 63, 2408, 6939, 2000, 4337, 6626, 3181, 1895, 2018, 948, 5008, 6037, 1618, 5822, 1111, 4987 } + iiIII11Il1liil1iI1l + 11 then il1I1lil1i11I1l1lII = lIll1IIIiIiilllliI1II() + iIiIlI1I1liIIIl1Iil() + IIliii1liililIll1Ii() end if i111I11li1111i1lIiI == #{ 5473, 5169, 823, 5695, 492, 1142, 5672, 5767, 2266, 1359, 2140, 1804, 6954, 2961, 426, 4135, 814, 2843, 3701, 3930 } + iiIII11Il1liil1iI1l + 43 then il1I1lil1i11I1l1lII = IIliii1liililIll1Ii() end if i111I11li1111i1lIiI == #{ 6382, 2387, 4208, 3943, 5559, 1208, 337, 2841, 3232, 6510, 683, 5243, 4801, 5839, 4398, 332, 2140, 5834, 5073, 635, 2128, 6835, 3706, 5664 } + iiIII11Il1liil1iI1l + -83 then il1I1lil1i11I1l1lII = lIll1IIIiIiilllliI1II() + iIiIlI1I1liIIIl1Iil() + IIliii1liililIll1Ii() end if i111I11li1111i1lIiI == #{ 5109, 1089, 4886, 2179, 5991, 5548, 6183, 3234, 6547, 826, 3381, 1974, 2893, 2614, 2450, 2796, 586, 2688, 3201, 3940 } + iiIII11Il1liil1iI1l + -117 then il1I1lil1i11I1l1lII = l1I1I11llI1IIIIill1(iIi1iiill1lilI11lli(insEncKey), #{5080, 5611}) end if i111I11li1111i1lIiI == #{ 831, 4134, 5943, 542, 982, 6316, 3178, 4363, 6670, 3434, 2448, 6495, 6466, 3116, 2838, 5119, 1911, 2068, 1535, 274, 6091, 6945, 6508, 3489 } + iiIII11Il1liil1iI1l + 64 then il1I1lil1i11I1l1lII = l1I1I11llI1IIIIill1(iIi1iiill1lilI11lli(lII1II1lilliiiiIlii), #{ 4224, 6794, 4763 }) end if i111I11li1111i1lIiI == #{ 4513, 3098, 1063, 496, 6573, 3626, 1400, 6356, 4536, 6374, 3193, 1908, 5352, 3208, 2061, 176, 3248, 2051, 6864, 5574, 487, 13, 4665, 250 } + iiIII11Il1liil1iI1l + -13 then il1I1lil1i11I1l1lII = #{ 5381, 2851, 858, 4041, 4266, 466, 2492, 5302, 5386, 1273, 3729, 1841, 5683, 2347, 6485, 6579, 5277, 922, 2030, 4451, 3308, 3490 } + iiIII11Il1liil1iI1l + 29337 == #{ 2240, 4061, 2401, 979, 5617, 475, 3338, 24, 5824, 3490, 5473, 4184, 1919, 5808, 4947, 6194, 6279, 1182, 5006, 4064, 4026, 1541, 6026 } + iiIII11Il1liil1iI1l + 81542 end lilIliIi1Iill1llIi1[5][lIlllI1iil1l11iIlII11 - llilllIIiiIl111lIii] = il1I1lil1i11I1l1lII end local i1lI1llllIIIiil1iiI = iIiIlI1I1liIIIl1Iil() for lIlllI1iil1l11iIlII11 = llilllIIiiIl111lIii, i1lI1llllIIIiil1iiI do lilIliIi1Iill1llIi1[2][lIlllI1iil1l11iIlII11 - llilllIIiiIl111lIii] = lIlIIlllIilIlii111ili() end local IliIiiiII1lIIIIIl1l = iIiIlI1I1liIIIl1Iil() - (#{ 746, 1568, 5905, 856, 4288, 3340, 1906, 1295, 4314, 6360, 4845, 5094, 197, 6082, 330, 3363, 2707, 2036, 5593, 1384, 5193, 3384, 5 } + iiIII11Il1liil1iI1l + 133574) local i11iIl1i1I1ii1Ii1II = lIll1IIIiIiilllliI1II() for lIlllI1iil1l11iIlII11 = llilllIIiiIl111lIii, IliIiiiII1lIIIIIl1l do local lIl1lIlillillI1IIIiIl = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lI1IllilIIIIIlllii1 = l1IIi1il11Il1i111Il(i11iIl1i1I1ii1Ii1II) lIl1lIlillillI1IIIiIl[8] = IIIIi1Iiiili1ii1IIi(lI1IllilIIIIIlllii1, #{ 5182, 6857, 4654, 1421, 1330, 4926, 1426, 3604, 1953, 6522, 1102, 5447, 559, 743, 2555, 3856, 1449, 4732, 4434 }, #{ 6352, 3022, 6825, 2043, 2587, 1060, 3014, 5509, 634, 4273, 114, 1826, 3843, 3872, 382, 6245, 2979, 132, 3865, 4477, 4464, 616, 2866 } + iiIII11Il1liil1iI1l + -123) lIl1lIlillillI1IIIiIl[6] = IIIIi1Iiiili1ii1IIi(lI1IllilIIIIIlllii1, #{ 5438, 297, 5351, 2468, 4895, 6206, 2508, 2577, 2373, 5523 }, #{ 6169, 1158, 785, 3824, 3138, 758, 6806, 1725, 215, 5533, 6439, 3744, 4527, 2333, 5029, 3579, 244, 5265 }) lIl1lIlillillI1IIIiIl[7] = IIIIi1Iiiili1ii1IIi(lI1IllilIIIIIlllii1, #{3829}, #{ 201, 3906, 6210, 2534, 1740, 6395, 369, 2473, 4808 }) lIl1lIlillillI1IIIiIl[3] = IIIIi1Iiiili1ii1IIi(lI1IllilIIIIIlllii1, #{ 3898, 4699, 2393, 1469, 103, 1751, 6569, 1608, 80, 4560, 5561, 228, 4007, 3310, 4956, 1208, 5185, 4938, 5847, 2923, 116, 6114, 3288 } + iiIII11Il1liil1iI1l + -122, #{ 6226, 2281, 2395, 1698, 634, 5511, 26, 6080, 4726, 4548, 1717, 4768, 5405, 1884, 765, 6876, 571, 6322, 3187, 6166, 5503 } + iiIII11Il1liil1iI1l + -115) lIl1lIlillillI1IIIiIl[2] = IIIIi1Iiiili1ii1IIi(lI1IllilIIIIIlllii1, #{5155}, #{ 5023, 1263, 5248, 625, 3444, 54, 5322, 6861, 6248, 3169, 2489, 3828, 3250, 3769, 90, 3921, 1914, 5581 }) lilIliIi1Iill1llIi1[4][lIlllI1iil1l11iIlII11] = lIl1lIlillillI1IIIiIl end for lIlllI1iil1l11iIlII11 = llilllIIiiIl111lIii, IliIiiiII1lIIIIIl1l do local lIl1lIlillillI1IIIiIl = lilIliIi1Iill1llIi1[4][lIlllI1iil1l11iIlII11] local liIlI1llIl1llli1iil = liiI1IIi111ll1liiii[lIl1lIlillillI1IIIiIl[3]] if liIlI1llIl1llli1iil == #{5231, 4310} and lIl1lIlillillI1IIIiIl[6] > 255 then lIl1lIlillillI1IIIiIl[10] = true lIl1lIlillillI1IIIiIl[9] = lilIliIi1Iill1llIi1[5][lIl1lIlillillI1IIIiIl[6] - 256] end if liIlI1llIl1llli1iil == #{ 2761, 3075, 1175 } then if lIl1lIlillillI1IIIiIl[7] > 255 then lIl1lIlillillI1IIIiIl[1] = true lIl1lIlillillI1IIIiIl[5] = lilIliIi1Iill1llIi1[5][lIl1lIlillillI1IIIiIl[7] - 256] end if lIl1lIlillillI1IIIiIl[6] > 255 then lIl1lIlillillI1IIIiIl[10] = true lIl1lIlillillI1IIIiIl[9] = lilIliIi1Iill1llIi1[5][lIl1lIlillillI1IIIiIl[6] - 256] end end if liIlI1llIl1llli1iil == #{3439} and lIl1lIlillillI1IIIiIl[7] > 255 then lIl1lIlillillI1IIIiIl[1] = true lIl1lIlillillI1IIIiIl[5] = lilIliIi1Iill1llIi1[5][lIl1lIlillillI1IIIiIl[7] - 256] end if liIlI1llIl1llli1iil == #{ 4237, 4604, 5447, 1277 } then lIl1lIlillillI1IIIiIl[4] = lilIliIi1Iill1llIi1[5][lIl1lIlillillI1IIIiIl[2]] end end return lilIliIi1Iill1llIi1 end local function IIi11lIi1iIIIIiilIl(lilIliIi1Iill1llIi1, lIll111iIIIiI1Ii1Ilii, lIlli1IIiIli111lIlil1) local iIli1IiliIlI1li1iil, lIl1IiilI11Il1liIiIiI = 14, 13 local lIl1iI1lIiilIi1i1iI1l = lilIliIi1Iill1llIi1[4] local lIl11il1iI1l11lIIil = 6 local ilill1i1iiIli1I1ii1 = lilIliIi1Iill1llIi1[2] local iII1i1iI11l1i1IIIIl = lilIliIi1Iill1llIi1[7] local IiliIliIIi1l1lI1ili = lilIliIi1Iill1llIi1[1] local Il1l11I1IIiilli1i1i = 3 local lIlIl111iIlIi1i11l1li = lilIliIi1Iill1llIi1[3] local i1li1il1iIiIIIiliI1 = 7 local function l1ll11illI1l1IIIIiI(...) local IiiIIIl1lliIllilIlI = 0 local I1l1IIiIilIll111lIl = { lIli1I1I1iiIiIilii1iI({}, 1, IiliIliIIi1l1lI1ili) } local lIlI1l1llii111lI1llil = 1 local l1lill1IIiI1IIiI1I1 = {} local lIlI1lIIiliIlii1liIii = {} local lIll111iIIIiI1Ii1Ilii = lIlIIli1111lliiI1Iili() local IlIIli111iIIl1lIIIi = { ... } local i1lIlliiII1II1I1Ii1 = #IlIIli111iIIl1lIIIi - 1 for lIlllI1iil1l11iIlII11 = 0, i1lIlliiII1II1I1Ii1 do if lIlllI1iil1l11iIlII11 < iII1i1iI11l1i1IIIIl then I1l1IIiIilIll111lIl[lIlllI1iil1l11iIlII11] = IlIIli111iIIl1lIIIi[lIlllI1iil1l11iIlII11 + 1] end end local function liiil11IilIlIlIIlI1(...) local l1IIiIiIIIl1iII1Il1 = lIiIIIlii1lIliIii11("#", ...) local lIliilI1liIilIliiII1I = { ... } return l1IIiIiIIIl1iII1Il1, lIliilI1liIilIliiII1I end local function lIlii11111IIII1illIii() while true do local iiiil1liiiI1lii11l1 = lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] local ii1Ili1II1iil11liI1 = iiiil1liiiI1lii11l1[3] lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil + 1 if ii1Ili1II1iil11liI1 >= 9 then if ii1Ili1II1iil11liI1 >= 14 then if ii1Ili1II1iil11liI1 >= 16 then if ii1Ili1II1iil11liI1 >= 17 then if ii1Ili1II1iil11liI1 == 18 then local l1IIiIiIIIl1iII1Il1 if iiiil1liiiI1lii11l1[10] then l1IIiIiIIIl1iII1Il1 = iiiil1liiiI1lii11l1[9] else l1IIiIiIIIl1iII1Il1 = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[6]] end I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[7]][l1IIiIiIIIl1iII1Il1] else lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil + (iiiil1liiiI1lii11l1[2] - illIiiii1lllIiiiiil) end else I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = { lIli1I1I1iiIiIilii1iI(lIl1i1illiiIIl1ii1Iii, 1, iiiil1liiiI1lii11l1[7] == 0 and 255 or iiiil1liiiI1lii11l1[7]) } end elseif ii1Ili1II1iil11liI1 == 15 then I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = iiiil1liiiI1lii11l1[4] else I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[7]] end elseif ii1Ili1II1iil11liI1 >= 11 then if ii1Ili1II1iil11liI1 >= 12 then if ii1Ili1II1iil11liI1 == 13 then I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = lIlli1IIiIli111lIlil1[iiiil1liiiI1lii11l1[7]] elseif iiiil1liiiI1lii11l1[6] == 100 then lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil - 1 lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] = { [3] = 8, [8] = (iiiil1liiiI1lii11l1[8] - 43) % 256, [7] = (iiiil1liiiI1lii11l1[7] - 43) % 256 } else for lIlllI1iil1l11iIlII11 = iiiil1liiiI1lii11l1[8], iiiil1liiiI1lii11l1[7] do I1l1IIiIilIll111lIl[lIlllI1iil1l11iIlII11] = nil end end else local l1iI1ll11lIiIllllil = iiiil1liiiI1lii11l1[8] local IlIIli111iIIl1lIIIi = iiiil1liiiI1lii11l1[7] local Ii1Ii1lillIII1li1l1 = iiiil1liiiI1lii11l1[6] local lIllIii11iiiIii1lIlll, lIlIIIIlIii1ll11il1il, lIlii11111IIII1illIii if IlIIli111iIIl1lIIIi ~= 1 then if IlIIli111iIIl1lIIIi ~= 0 then lIlIIIIlIii1ll11il1il = l1iI1ll11lIiIllllil + IlIIli111iIIl1lIIIi - 1 else lIlIIIIlIii1ll11il1il = IiiIIIl1lliIllilIlI end lIlIIIIlIii1ll11il1il, lIllIii11iiiIii1lIlll = liiil11IilIlIlIIlI1(I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil](lIli1I1I1iiIiIilii1iI(I1l1IIiIilIll111lIl, l1iI1ll11lIiIllllil + 1, lIlIIIIlIii1ll11il1il))) else lIlIIIIlIii1ll11il1il, lIllIii11iiiIii1lIlll = liiil11IilIlIlIIlI1(I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil]()) end if Ii1Ii1lillIII1li1l1 ~= 1 then if Ii1Ii1lillIII1li1l1 ~= 0 then lIlIIIIlIii1ll11il1il = l1iI1ll11lIiIllllil + Ii1Ii1lillIII1li1l1 - 2 IiiIIIl1lliIllilIlI = lIlIIIIlIii1ll11il1il + 1 else lIlIIIIlIii1ll11il1il = lIlIIIIlIii1ll11il1il + l1iI1ll11lIiIllllil - 1 IiiIIIl1lliIllilIlI = lIlIIIIlIii1ll11il1il end lIlii11111IIII1illIii = 0 for lIlllI1iil1l11iIlII11 = l1iI1ll11lIiIllllil, lIlIIIIlIii1ll11il1il do lIlii11111IIII1illIii = lIlii11111IIII1illIii + 1 I1l1IIiIilIll111lIl[lIlllI1iil1l11iIlII11] = lIllIii11iiiIii1lIlll[lIlii11111IIII1illIii] end else IiiIIIl1lliIllilIlI = l1iI1ll11lIiIllllil - 1 end for lIlllI1iil1l11iIlII11 = IiiIIIl1lliIllilIlI + 1, IiliIliIIi1l1lI1ili do I1l1IIiIilIll111lIl[lIlllI1iil1l11iIlII11] = nil end end elseif ii1Ili1II1iil11liI1 == 10 then local IlillllI1lililIill1 = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[7]] local l1IIiIiIIIl1iII1Il1 if iiiil1liiiI1lii11l1[10] then l1IIiIiIIIl1iII1Il1 = iiiil1liiiI1lii11l1[9] else l1IIiIiIIIl1iII1Il1 = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[6]] end I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8] + 1] = IlillllI1lililIill1 I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = IlillllI1lililIill1[l1IIiIiIIIl1iII1Il1] elseif iiiil1liiiI1lii11l1[6] == 167 then lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil - 1 lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] = { [3] = 13, [8] = (iiiil1liiiI1lii11l1[8] - 244) % 256, [7] = (iiiil1liiiI1lii11l1[7] - 244) % 256 } elseif iiiil1liiiI1lii11l1[6] == 201 then lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil - 1 lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] = { [3] = 7, [8] = (iiiil1liiiI1lii11l1[8] - 21) % 256, [7] = (iiiil1liiiI1lii11l1[7] - 21) % 256 } else I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = not I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[7]] end elseif ii1Ili1II1iil11liI1 < 4 then if ii1Ili1II1iil11liI1 >= 2 then if ii1Ili1II1iil11liI1 == 3 then lIll111iIIIiI1Ii1Ilii[iiiil1liiiI1lii11l1[4]] = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] else local iiii1IlII1IIl11lIi1, l1IIiIiIIIl1iII1Il1 if iiiil1liiiI1lii11l1[1] then iiii1IlII1IIl11lIi1 = iiiil1liiiI1lii11l1[5] else iiii1IlII1IIl11lIi1 = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[7]] end if iiiil1liiiI1lii11l1[10] then l1IIiIiIIIl1iII1Il1 = iiiil1liiiI1lii11l1[9] else l1IIiIiIIIl1iII1Il1 = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[6]] end if iiii1IlII1IIl11lIi1 == l1IIiIiIIIl1iII1Il1 ~= (iiiil1liiiI1lii11l1[8] ~= 0) then lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil + 1 end end elseif ii1Ili1II1iil11liI1 ~= 1 then local iiii1IlII1IIl11lIi1, l1IIiIiIIIl1iII1Il1 if iiiil1liiiI1lii11l1[1] then iiii1IlII1IIl11lIi1 = iiiil1liiiI1lii11l1[5] else iiii1IlII1IIl11lIi1 = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[7]] end if iiiil1liiiI1lii11l1[10] then l1IIiIiIIIl1iII1Il1 = iiiil1liiiI1lii11l1[9] else l1IIiIiIIIl1iII1Il1 = I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[6]] end I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]][iiii1IlII1IIl11lIi1] = l1IIiIiIIIl1iII1Il1 else local lIlIIll11iI1iiiIliIIi = ilill1i1iiIli1I1ii1[iiiil1liiiI1lii11l1[2]] local IiIlII11lIii11iii1i = {} if lIlIIll11iI1iiiIliIIi[lIl11il1iI1l11lIIil] > 0 then do local iIiIiliIili1l1liI1i = {} IiIlII11lIii11iii1i = lIlIIl1Ii1IIlil11iIli({}, { __index = function(lIliilI1liIilIliiII1I, lIlI1IllIIi1i1IIilIi1) local I1I1Iliiill1iili1II = iIiIiliIili1l1liI1i[lIlI1IllIIi1i1IIilIi1] return I1I1Iliiill1iili1II[1][I1I1Iliiill1iili1II[2]] end, __newindex = function(lIliilI1liIilIliiII1I, lIlI1IllIIi1i1IIilIi1, IIllIii111lIIIliiIi) local I1I1Iliiill1iili1II = iIiIiliIili1l1liI1i[lIlI1IllIIi1i1IIilIi1] I1I1Iliiill1iili1II[1][I1I1Iliiill1iili1II[2]] = IIllIii111lIIIliiIi end }) for lIlllI1iil1l11iIlII11 = 1, lIlIIll11iI1iiiIliIIi[lIl11il1iI1l11lIIil] do local Iiilliliil1l1I1ili1 = lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] if Iiilliliil1l1I1ili1[Il1l11I1IIiilli1i1i] == iIli1IiliIlI1li1iil then iIiIiliIili1l1liI1i[lIlllI1iil1l11iIlII11 - 1] = { I1l1IIiIilIll111lIl, Iiilliliil1l1I1ili1[i1li1il1iIiIIIiliI1] } elseif Iiilliliil1l1I1ili1[Il1l11I1IIiilli1i1i] == lIl1IiilI11Il1liIiIiI then iIiIiliIili1l1liI1i[lIlllI1iil1l11iIlII11 - 1] = { lIlli1IIiIli111lIlil1, Iiilliliil1l1I1ili1[i1li1il1iIiIIIiliI1] } end lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil + 1 end if not l1lill1IIiI1IIiI1I1[I1l1IIiIilIll111lIl] then l1lill1IIiI1IIiI1I1[I1l1IIiIilIll111lIl] = {iIiIiliIili1l1liI1i} else iiiIiiiiiI1IIllilli(l1lill1IIiI1IIiI1I1[I1l1IIiIilIll111lIl], iIiIiliIili1l1liI1i) end end end local i1IliillIliiIIiiiii = IIi11lIi1iIIIIiilIl(lIlIIll11iI1iiiIliIIi, lIll111iIIIiI1Ii1Ilii, IiIlII11lIii11iii1i) I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = i1IliillIliiIIiiiii end elseif ii1Ili1II1iil11liI1 < 6 then if ii1Ili1II1iil11liI1 == 5 then local l1iI1ll11lIiIllllil = iiiil1liiiI1lii11l1[8] local l1l1llIi1ilIliIlI1l = l1iI1ll11lIiIllllil + 2 local lIl1iiiiiiiliIiIl11 = { I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil](I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil + 1], I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil + 2]) } for lIlllI1iil1l11iIlII11 = 1, iiiil1liiiI1lii11l1[6] do I1l1IIiIilIll111lIl[l1l1llIi1ilIliIlI1l + lIlllI1iil1l11iIlII11] = lIl1iiiiiiiliIiIl11[lIlllI1iil1l11iIlII11] end if I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil + 3] ~= nil then I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil + 2] = I1l1IIiIilIll111lIl[l1iI1ll11lIiIllllil + 3] else lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil + 1 end elseif iiiil1liiiI1lii11l1[6] == 224 then lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil - 1 lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] = { [3] = 14, [8] = (iiiil1liiiI1lii11l1[8] - 133) % 256, [7] = (iiiil1liiiI1lii11l1[7] - 133) % 256 } elseif iiiil1liiiI1lii11l1[6] == 21 then lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil - 1 lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] = { [3] = 12, [8] = (iiiil1liiiI1lii11l1[8] - 50) % 256, [7] = (iiiil1liiiI1lii11l1[7] - 50) % 256 } else local l1iI1ll11lIiIllllil = iiiil1liiiI1lii11l1[8] local i1lI1llllIIIiil1iiI = iiiil1liiiI1lii11l1[7] local lIlll1lIi1li1I11111ii = i1lI1llllIIIiil1iiI > 0 and i1lI1llllIIIiil1iiI - 1 or i1lIlliiII1II1I1Ii1 - iII1i1iI11l1i1IIIIl if lIlll1lIi1li1I11111ii < 0 then lIlll1lIi1li1I11111ii = -1 end for lIlllI1iil1l11iIlII11 = l1iI1ll11lIiIllllil, l1iI1ll11lIiIllllil + lIlll1lIi1li1I11111ii do I1l1IIiIilIll111lIl[lIlllI1iil1l11iIlII11] = IlIIli111iIIl1lIIIi[iII1i1iI11l1i1IIIIl + (lIlllI1iil1l11iIlII11 - l1iI1ll11lIiIllllil) + 1] end if i1lI1llllIIIiil1iiI == 0 then IiiIIIl1lliIllilIlI = l1iI1ll11lIiIllllil + lIlll1lIi1li1I11111ii for lIlllI1iil1l11iIlII11 = IiiIIIl1lliIllilIlI + 1, IiliIliIIi1l1lI1ili do I1l1IIiIilIll111lIl[lIlllI1iil1l11iIlII11] = nil end end end elseif ii1Ili1II1iil11liI1 >= 7 then if ii1Ili1II1iil11liI1 == 8 then if iiiil1liiiI1lii11l1[6] == 106 then lIlI1l1llii111lI1llil = lIlI1l1llii111lI1llil - 1 lIl1iI1lIiilIi1i1iI1l[lIlI1l1llii111lI1llil] = { [3] = 5, [8] = (iiiil1liiiI1lii11l1[8] - 225) % 256, [6] = (iiiil1liiiI1lii11l1[7] - 225) % 256 } else local llliIiI1IIIIIliIl1I = iiiil1liiiI1lii11l1[8] local Ill1IiI11IiiIIll1ll = {} for lIlliiilIill111l11I1I, iIiIiliIili1l1liI1i in pairs(l1lill1IIiI1IIiI1I1[I1l1IIiIilIll111lIl]) do for lIlliiilIill111l11I1I, I1I1Iliiill1iili1II in pairs(iIiIiliIili1l1liI1i) do if I1I1Iliiill1iili1II[1] == I1l1IIiIilIll111lIl and llliIiI1IIIIIliIl1I <= I1I1Iliiill1iili1II[2] then local ilIiIIi1illllliIiil = I1I1Iliiill1iili1II[2] if not Ill1IiI11IiiIIll1ll[ilIiIIi1illllliIiil] then IIi11lIi1iIIIIiilIl(lIlI1lIIiliIlii1liIii, I1l1IIiIilIll111lIl[ilIiIIi1illllliIiil]) Ill1IiI11IiiIIll1ll[ilIiIIi1illllliIiil] = #lIlI1lIIiliIlii1liIii end I1I1Iliiill1iili1II[1] = lIlI1lIIiliIlii1liIii I1I1Iliiill1iili1II[2] = Ill1IiI11IiiIIll1ll[ilIiIIi1illllliIiil] end end end end else l1lill1IIiI1IIiI1I1[I1l1IIiIilIll111lIl] = nil local l1iI1ll11lIiIllllil = iiiil1liiiI1lii11l1[8] local iI1I1IIlII11Il1il1l = iiiil1liiiI1lii11l1[7] if iI1I1IIlII11Il1il1l == 1 then return true end local lIlIIIIlIii1ll11il1il = l1iI1ll11lIiIllllil + iI1I1IIlII11Il1il1l - 2 if iI1I1IIlII11Il1il1l == 0 then lIlIIIIlIii1ll11il1il = IiiIIIl1lliIllilIlI end return true, l1iI1ll11lIiIllllil, lIlIIIIlIii1ll11il1il end else I1l1IIiIilIll111lIl[iiiil1liiiI1lii11l1[8]] = lIll111iIIIiI1Ii1Ilii[iiiil1liiiI1lii11l1[4]] end end end local lIlIII1i1IllIii1iiiil, l1ll11llillI1iiil1i, llliIiI1IIIIIliIl1I, iIiIiili11lIl1lIIIi = lIli1iI1lIlIiliI1l11I(lIlii11111IIII1illIii) if lIlIII1i1IllIii1iiiil then if llliIiI1IIIIIliIl1I then return lIli1I1I1iiIiIilii1iI(I1l1IIiIilIll111lIl, llliIiI1IIIIIliIl1I, iIiIiili11lIl1lIIIi) end else lIl11llI1II1ilIlIi1ii("Luraph Script:" .. (lIlIl111iIlIi1i11l1li[lIlI1l1llii111lI1llil - 1] or "") .. ": " .. I1iIIliiIi1lIl1l111(l1ll11llillI1iiil1i), 0) end end lIl1I1ll1iIiIIiI1I1iI(l1ll11illI1l1IIIIiI, lIll111iIIIiI1Ii1Ilii) return l1ll11illI1l1IIIIiI end local Ill1IiI11IiiIIll1ll = lIlIIlllIilIlii111ili() return IIi11lIi1iIIIIiilIl(Ill1IiI11IiiIIll1ll, lIll111iIIIiI1Ii1Ilii)() end lIlIl1il1Ii1lIiIII1llIlIIli1111lliiI1Iili()) 
