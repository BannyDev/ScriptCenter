-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local i11IillIIilii11Il11 = assert local i1llIliIiIiiI11iii1 = select local iII1IllIiI1Illi11II = tonumber local lIlllllilIi1i1liiiiiI = unpack local lIlIlIIlli1ll111IilIi = pcall local l1l11llI1111llIIIii = setfenv local II11IilIii1ilIi1Ii1 = setmetatable local llIIlIllIIlliI1li1l = type local lIliIl1IiIi1IIII11Ill = getfenv local iI1II1I1iiI1Il111i1 = tostring local Illi1Ili11iIiIiIii1 = error local lIl1Iiill1IIli1ilII1l = string.sub local lIl1iIlii1I11iiIlIIil = string.byte local lI1i1I11lll1iIIi1l1 = string.char local lilliiiIlIIil1l1iII = string.rep local I1i11lIi1iI1IiIi11i = string.gsub local lIliliIlIiIili11ii1il = string.match local i1Illlii1I11II1l1i1 = table.insert local i1i1l1Ill1l1IIiii1i = lIl1iIlii1I11iiIlIIil("@", 1) local i1i1lII1lliiIIll111, lIl1IIlIi1l1illIIIl1l = #{328}, #{ 6360, 5554, 2285, 6691, 5923, 6830, 1642, 1779, 2543, 6349, 2628, 4473, 4710, 1319, 2872, 2254, 4046, 6155, 6560, 3501, 3999 } + i1i1l1Ill1l1IIiii1i + 130986 local IIIil1iii1I1i1I1lil = {} local IiI1iIil1IIiiiiii11 = 1 local l1lIlilI11lliIi1II1, ilIiIi11ll1ii1Il1lI local function iIIlilIIiiIiIIiliil(iIliiIiI1iiIii1iIll, IllilII11lI1iIiIiIl) local lilil1llli11Ii1iili iIliiIiI1iiIii1iIll = I1i11lIi1iI1IiIi11i(lIl1Iiill1IIli1ilII1l(iIliiIiI1iiIii1iIll, 5), "..", function(liIIIIiIi1lI11I1I1l) if lIl1iIlii1I11iiIlIIil(liIIIIiIi1lI11I1I1l, 2) == 72 then lilil1llli11Ii1iili = iII1IllIiI1Illi11II(lIl1Iiill1IIli1ilII1l(liIIIIiIi1lI11I1I1l, 1, 1)) return "" else local lIlliIi1l11l11l1llIil = lI1i1I11lll1iIIi1l1(iII1IllIiI1Illi11II(liIIIIiIi1lI11I1I1l, 16)) if lilil1llli11Ii1iili then local lIilIIllII1lliiI1Il = lilliiiIlIIil1l1iII(lIlliIi1l11l11l1llIil, lilil1llli11Ii1iili) lilil1llli11Ii1iili = nil return lIilIIllII1lliiI1Il else return lIlliIi1l11l11l1llIil end end end) local function i1I1lliiIi11l1lIIII() local Il1i1Il11i11i1ili11 = lIl1iIlii1I11iiIlIIil(iIliiIiI1iiIii1iIll, IiI1iIil1IIiiiiii11, IiI1iIil1IIiiiiii11) IiI1iIil1IIiiiiii11 = IiI1iIil1IIiiiiii11 + 1 return Il1i1Il11i11i1ili11 end local function lIlllIlillIiI111I11ll() local Il1i1Il11i11i1ili11, lIlliIi1l11l11l1llIil, lIilIIllII1lliiI1Il, lIl1IiI1lllliilIi1Il1 = lIl1iIlii1I11iiIlIIil(iIliiIiI1iiIii1iIll, IiI1iIil1IIiiiiii11, IiI1iIil1IIiiiiii11 + 3) IiI1iIil1IIiiiiii11 = IiI1iIil1IIiiiiii11 + 4 return lIl1IiI1lllliilIi1Il1 * 16777216 + lIilIIllII1lliiI1Il * 65536 + lIlliIi1l11l11l1llIil * 256 + Il1i1Il11i11i1ili11 end local function l1iili1illiIIilI111(ll1I1lI1Ii1l1l1iIiI, Ili1liiiliII1lll1ii, li11I1li11iilli1iii) if li11I1li11iilli1iii then local lIlIll1li1lIiIIIi11ii, IlI1I1iiIi1Ii1Il1ll = 0, 0 for Ii11I1lIiIII1lliIll = Ili1liiiliII1lll1ii, li11I1li11iilli1iii do lIlIll1li1lIiIIIi11ii = lIlIll1li1lIiIIIi11ii + 2 ^ IlI1I1iiIi1Ii1Il1ll * l1iili1illiIIilI111(ll1I1lI1Ii1l1l1iIiI, Ii11I1lIiIII1lliIll) IlI1I1iiIi1Ii1Il1ll = IlI1I1iiIi1Ii1Il1ll + 1 end return lIlIll1li1lIiIIIi11ii else local lIllI1I1I1Iil11l1iill = 2 ^ (Ili1liiiliII1lll1ii - 1) return lIllI1I1I1Iil11l1iill <= ll1I1lI1Ii1l1l1iIiI % (lIllI1I1I1Iil11l1iill + lIllI1I1I1Iil11l1iill) and 1 or 0 end end local function Iil11iIl1Iiii1l1l11() local Il1i1Il11i11i1ili11, lIlliIi1l11l11l1llIil = lIlllIlillIiI111I11ll(), lIlllIlillIiI111I11ll() if Il1i1Il11i11i1ili11 == 0 and lIlliIi1l11l11l1llIil == 0 then return 0 end return (-2 * l1iili1illiIIilI111(lIlliIi1l11l11l1llIil, 32) + 1) * 2 ^ (l1iili1illiIIilI111(lIlliIi1l11l11l1llIil, 21, 31) - 1023) * ((l1iili1illiIIilI111(lIlliIi1l11l11l1llIil, 1, 20) * 4294967296 + Il1i1Il11i11i1ili11) / 4503599627370496 + 1) end local lIl111illi1iIiliI1IIl = bit or bit32 local lII1IlIll1lil111liI = lIl111illi1iIiliI1IIl and lIl111illi1iIiliI1IIl.bxor or function(Il1i1Il11i11i1ili11, lIlliIi1l11l11l1llIil) local l1lI11l1l1lIIil11Il = 1 local lIilIIllII1lliiI1Il = 0 while Il1i1Il11i11i1ili11 > 0 and lIlliIi1l11l11l1llIil > 0 do local i1iIi1lIIlli1IIIilI = Il1i1Il11i11i1ili11 % 2 local IiIII1llIl1Il1II1ll = lIlliIi1l11l11l1llIil % 2 if i1iIi1lIIlli1IIIilI ~= IiIII1llIl1Il1II1ll then lIilIIllII1lliiI1Il = lIilIIllII1lliiI1Il + l1lI11l1l1lIIil11Il end Il1i1Il11i11i1ili11 = (Il1i1Il11i11i1ili11 - i1iIi1lIIlli1IIIilI) / 2 lIlliIi1l11l11l1llIil = (lIlliIi1l11l11l1llIil - IiIII1llIl1Il1II1ll) / 2 l1lI11l1l1lIIil11Il = l1lI11l1l1lIIil11Il * 2 end if Il1i1Il11i11i1ili11 < lIlliIi1l11l11l1llIil then Il1i1Il11i11i1ili11 = lIlliIi1l11l11l1llIil end while Il1i1Il11i11i1ili11 > 0 do local i1iIi1lIIlli1IIIilI = Il1i1Il11i11i1ili11 % 2 if i1iIi1lIIlli1IIIilI > 0 then lIilIIllII1lliiI1Il = lIilIIllII1lliiI1Il + l1lI11l1l1lIIil11Il end Il1i1Il11i11i1ili11 = (Il1i1Il11i11i1ili11 - i1iIi1lIIlli1IIIilI) / 2 l1lI11l1l1lIIil11Il = l1lI11l1l1lIIil11Il * 2 end return lIilIIllII1lliiI1Il end local function iillI1iIll1111iI11l(lIli1IliIl1liIiIIi1I1) local iI1llllliI111l1iiIl = { lIl1iIlii1I11iiIlIIil(iIliiIiI1iiIii1iIll, IiI1iIil1IIiiiiii11, IiI1iIil1IIiiiiii11 + 3) } IiI1iIil1IIiiiiii11 = IiI1iIil1IIiiiiii11 + 4 local Il1i1Il11i11i1ili11 = lII1IlIll1lil111liI(iI1llllliI111l1iiIl[1], ilIiIi11ll1ii1Il1lI) local lIlliIi1l11l11l1llIil = lII1IlIll1lil111liI(iI1llllliI111l1iiIl[2], ilIiIi11ll1ii1Il1lI) local lIilIIllII1lliiI1Il = lII1IlIll1lil111liI(iI1llllliI111l1iiIl[3], ilIiIi11ll1ii1Il1lI) local lIl1IiI1lllliilIi1Il1 = lII1IlIll1lil111liI(iI1llllliI111l1iiIl[4], ilIiIi11ll1ii1Il1lI) ilIiIi11ll1ii1Il1lI = (77 * ilIiIi11ll1ii1Il1lI + lIli1IliIl1liIiIIi1I1) % 256 return lIl1IiI1lllliilIi1Il1 * 16777216 + lIilIIllII1lliiI1Il * 65536 + lIlliIi1l11l11l1llIil * 256 + Il1i1Il11i11i1ili11 end local function iliIIl1illlIlIIlIil(liIiIII11ill1I11lli) local lIliiIiiIIIi1llil1ll1 = lIlllIlillIiI111I11ll() local l1llIIiii111lilii1i = "" for Ii11I1lIiIII1lliIll = i1i1lII1lliiIIll111, lIliiIiiIIIi1llil1ll1 do l1llIIiii111lilii1i = l1llIIiii111lilii1i .. lI1i1I11lll1iIIi1l1(lII1IlIll1lil111liI(lIl1iIlii1I11iiIlIIil(iIliiIiI1iiIii1iIll, IiI1iIil1IIiiiiii11 + Ii11I1lIiIII1lliIll - 1), l1lIlilI11lliIi1II1)) l1lIlilI11lliIi1II1 = (liIiIII11ill1I11lli * l1lIlilI11lliIi1II1 + 135) % 256 end IiI1iIil1IIiiiiii11 = IiI1iIil1IIiiiiii11 + lIliiIiiIIIi1llil1ll1 return l1llIIiii111lilii1i end l1lIlilI11lliIi1II1 = i1I1lliiIi11l1lIIII() ilIiIi11ll1ii1Il1lI = i1I1lliiIi11l1lIIII() local iliiIliiIIII1l1lli1 = {} for Ii11I1lIiIII1lliIll = i1i1lII1lliiIIll111, i1I1lliiIi11l1lIIII() do local lIlI1ii1I1i1IIli1Iii1 = i1I1lliiIi11l1lIIII() local lIli1I1iIlIiI1llIiiil = (Ii11I1lIiIII1lliIll - 1) * 2 iliiIliiIIII1l1lli1[lIli1I1iIlIiI1llIiiil] = l1iili1illiIIilI111(lIlI1ii1I1i1IIli1Iii1, 1, 4) iliiIliiIIII1l1lli1[lIli1I1iIlIiI1llIiiil + 1] = l1iili1illiIIilI111(lIlI1ii1I1i1IIli1Iii1, 5, 8) end local function il1iIIIlll1iIiilIii() local Ili1iIl111IIl11i1i1 = { nil, nil, {}, nil, {}, {}, {} } i1I1lliiIi11l1lIIII() lIlllIlillIiI111I11ll() local I1I1iii1Iil1lli1lil = lIlllIlillIiI111I11ll() for Ii11I1lIiIII1lliIll = i1i1lII1lliiIIll111, I1I1iii1Iil1lli1lil do Ili1iIl111IIl11i1i1[7][Ii11I1lIiIII1lliIll] = lIlllIlillIiI111I11ll() end local I1I1iii1Iil1lli1lil = lIlllIlillIiI111I11ll() for Ii11I1lIiIII1lliIll = i1i1lII1lliiIIll111, I1I1iii1Iil1lli1lil do Ili1iIl111IIl11i1i1[5][Ii11I1lIiIII1lliIll - i1i1lII1lliiIIll111] = il1iIIIlll1iIiilIii() end local I1I1iii1Iil1lli1lil = lIlllIlillIiI111I11ll() - (#{ 1275, 5353, 4486, 780, 6470, 5124, 428, 5179, 4303, 4536, 371, 4905, 4945, 5321, 1142, 553, 209, 5453, 2013, 1063, 4476, 2952 } + i1i1l1Ill1l1IIiii1i + 133622) local ilI1iIiIiIl111I111I = i1I1lliiIi11l1lIIII() for Ii11I1lIiIII1lliIll = i1i1lII1lliiIIll111, I1I1iii1Iil1lli1lil do local l11Iiliii1iliii1ii1 local llIIlIllIIlliI1li1l = i1I1lliiIi11l1lIIII() if llIIlIllIIlliI1li1l == #{ 4711, 2846, 1645, 5815, 1879, 3453, 2178, 5795, 1150, 90, 3588, 258, 3295, 5439, 3367, 11, 5313, 4195, 534, 2396, 5217, 6210, 5952, 6762 } + i1i1l1Ill1l1IIiii1i + 153 then l11Iiliii1iliii1ii1 = lIlllIlillIiI111I11ll() end if llIIlIllIIlliI1li1l == #{ 5611, 2806, 6565, 2112, 1555, 1417, 6742, 2277, 2739, 6519, 3983, 5360, 3444, 5780, 4188, 6289, 2883, 1378, 4433, 4829 } + i1i1l1Ill1l1IIiii1i + 31 then l11Iiliii1iliii1ii1 = lIl1Iiill1IIli1ilII1l(iliIIl1illlIlIIlIil(ilI1iIiIiIl111I111I), #{ 5553, 2677, 558 }) end if llIIlIllIIlliI1li1l == #{ 6020, 4897, 2086, 1434, 4745, 104, 40, 4016, 5849, 5258, 2968, 441, 6690, 6794, 4349, 1663, 156, 570, 6547, 3125, 1037, 3534, 4761, 6134 } + i1i1l1Ill1l1IIiii1i + 60 then l11Iiliii1iliii1ii1 = #{ 1591, 6491, 398, 6145, 6794, 2272, 3827, 4309, 2823, 1302, 2385, 5581, 1964, 2247, 6111, 1875, 6574, 2216, 3007, 3330, 6085, 4172, 3241 } + i1i1l1Ill1l1IIiii1i + 1974 == #{ 1591, 6491, 398, 6145, 6794, 2272, 3827, 4309, 2823, 1302, 2385, 5581, 1964, 2247, 6111, 1875, 6574, 2216, 3007, 3330, 6085, 4172, 3241 } + i1i1l1Ill1l1IIiii1i + 1974 end if llIIlIllIIlliI1li1l == #{ 3940, 2359, 5720, 4044, 3127, 3760, 2677, 746, 6791, 2332, 1424, 2047, 1523, 5958, 2491, 4554, 2551, 5534, 2100, 6047 } + i1i1l1Ill1l1IIiii1i + 79 then l11Iiliii1iliii1ii1 = lIl1Iiill1IIli1ilII1l(iliIIl1illlIlIIlIil(ilI1iIiIiIl111I111I), #{ 4075, 3978, 1042, 103 }) end if llIIlIllIIlliI1li1l == #{ 6650, 1920, 2468, 6311, 447, 1837, 3777, 387, 357, 2409, 4132, 6729, 971, 4726, 6819, 6737, 4576, 5781, 384, 238, 6692, 1382 } + i1i1l1Ill1l1IIiii1i + 68 then l11Iiliii1iliii1ii1 = lIlllIlillIiI111I11ll() end if llIIlIllIIlliI1li1l == #{ 1290, 5245, 64, 3386, 4128, 417, 6896, 2939, 5245, 6724, 5239, 6461, 1559, 3240, 339, 1369, 5792, 5135, 6407, 938, 6677 } + i1i1l1Ill1l1IIiii1i + 102 then l11Iiliii1iliii1ii1 = lIl1Iiill1IIli1ilII1l(iliIIl1illlIlIIlIil(ilI1iIiIiIl111I111I), #{ 4075, 3978, 1042, 103 }) end if llIIlIllIIlliI1li1l == #{ 1542, 4601, 4075, 4951, 797, 5631, 6106, 1937, 4757, 173, 6370, 6192, 1670, 6083, 1516, 4058, 1446, 588, 2385, 2131 } + i1i1l1Ill1l1IIiii1i + 166 then l11Iiliii1iliii1ii1 = #{ 4002, 2437, 5936, 6304, 5037, 4492, 1963, 4267, 3300, 1586, 3, 6598, 5348, 3287, 2834, 6669, 2131, 5833, 1222, 4870, 314, 6494, 1653, 4486 } + i1i1l1Ill1l1IIiii1i + 72013 == #{ 6709, 1860, 6246, 934, 149, 1579, 2148, 3533, 5248, 3623, 233, 1285, 1273, 661, 5132, 415, 3561, 6888, 863, 5486, 2293, 4583, 5885, 5074 } + i1i1l1Ill1l1IIiii1i + 53642 end if llIIlIllIIlliI1li1l == #{ 6468, 6203, 6722, 5134, 2728, 4017, 4213, 6387, 4985, 2849, 4831, 2711, 934, 3375, 2178, 4217, 4822, 614, 1589, 5807, 400 } + i1i1l1Ill1l1IIiii1i + -34 then l11Iiliii1iliii1ii1 = lIl1Iiill1IIli1ilII1l(iliIIl1illlIlIIlIil(#{ 3221, 2520, 3389, 5552, 5532, 4427, 2482, 1266, 370, 3447, 6341, 1523, 682, 1496, 3680, 1556, 3701, 3067, 3801, 2795, 4125 } + i1i1l1Ill1l1IIiii1i + 35), #{ 2024, 671, 4198, 3330 }) end if llIIlIllIIlliI1li1l == #{ 4578, 4270, 6395, 5356, 6658, 6459, 6954, 4991, 6389, 1960, 3955, 1297, 6113, 319, 6029, 6795, 4274, 3340, 1630, 4238 } + i1i1l1Ill1l1IIiii1i + -1 then l11Iiliii1iliii1ii1 = Iil11iIl1Iiii1l1l11() end Ili1iIl111IIl11i1i1[6][Ii11I1lIiIII1lliIll - i1i1lII1lliiIIll111] = l11Iiliii1iliii1ii1 end Ili1iIl111IIl11i1i1[2] = i1I1lliiIi11l1lIIII() lIlllIlillIiI111I11ll() i1I1lliiIi11l1lIIII() i1I1lliiIi11l1lIIII() local lIllIiIIIiIlilIll1I1i = lIlllIlillIiI111I11ll() - (#{ 4266, 244, 6328, 4254, 4074, 996, 6161, 6364, 1011, 3984, 3138, 6211, 2754, 3766, 4043, 3066, 6633, 4241, 5454, 113, 2567, 3451, 4097 } + i1i1l1Ill1l1IIiii1i + 133672) local IllllllIliIllIllill = i1I1lliiIi11l1lIIII() for Ii11I1lIiIII1lliIll = i1i1lII1lliiIIll111, lIllIiIIIiIlilIll1I1i do local I1lI11lliI1IiliI1II = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIlI1ii1I1i1IIli1Iii1 = iillI1iIll1111iI11l(IllllllIliIllIllill) I1lI11lliI1IiliI1II[6] = l1iili1illiIIilI111(lIlI1ii1I1i1IIli1Iii1, #{ 4357, 3323, 3406, 1705, 4107, 820, 6349, 3787, 2766, 2796 }, #{ 3311, 3930, 4804, 3644, 4094, 4441, 3285, 3542, 1498, 1286, 2282, 2468, 3266, 601, 5689, 3544, 6387, 2993 }) I1lI11lliI1IiliI1II[9] = l1iili1illiIIilI111(lIlI1ii1I1i1IIli1Iii1, #{1658}, #{ 975, 5714, 3291, 1787, 2360, 4456, 4308, 5351, 3464, 1824, 43, 2629, 2757, 1513, 5245, 6457, 1505, 3062 }) I1lI11lliI1IiliI1II[8] = l1iili1illiIIilI111(lIlI1ii1I1i1IIli1Iii1, #{ 4114, 6748, 1692, 2070, 1550, 5131, 6118, 3541, 3963, 4588, 1597, 4997, 3351, 2209, 3202, 3229, 723, 5665, 6252, 4872, 5217, 4607, 3341 } + i1i1l1Ill1l1IIiii1i + -60, #{ 1276, 3814, 1202, 6648, 1200, 2291, 795, 857, 3723, 3971, 1329, 5951, 5909, 4293, 3002, 5884, 3864, 936, 5979, 5446, 3766, 4672, 6546 } + i1i1l1Ill1l1IIiii1i + -55) I1lI11lliI1IiliI1II[4] = l1iili1illiIIilI111(lIlI1ii1I1i1IIli1Iii1, #{4381}, #{ 4255, 1018, 210, 873, 2026, 823, 2346, 6204, 5383 }) I1lI11lliI1IiliI1II[7] = l1iili1illiIIilI111(lIlI1ii1I1i1IIli1Iii1, #{ 2444, 6354, 2362, 3135, 4923, 2548, 588, 717, 1945, 6942, 5873, 3096, 4511, 606, 3262, 6335, 6515, 5360, 5370 }, #{ 431, 6140, 2961, 361, 1676, 2841, 4296, 1405, 1375, 4387, 6767, 1219, 6938, 2481, 687, 249, 4019, 6701, 1574, 2723, 56, 5936, 3349 } + i1i1l1Ill1l1IIiii1i + -61) Ili1iIl111IIl11i1i1[3][Ii11I1lIiIII1lliIll] = I1lI11lliI1IiliI1II end for Ii11I1lIiIII1lliIll = i1i1lII1lliiIIll111, lIllIiIIIiIlilIll1I1i do local I1lI11lliI1IiliI1II = Ili1iIl111IIl11i1i1[3][Ii11I1lIiIII1lliIll] local lI1111iilII1Ii1Ili1 = iliiIliiIIII1l1lli1[I1lI11lliI1IiliI1II[8]] if lI1111iilII1Ii1Ili1 == #{ 2594, 693, 6632 } then if I1lI11lliI1IiliI1II[4] > 255 then I1lI11lliI1IiliI1II[3] = true I1lI11lliI1IiliI1II[2] = Ili1iIl111IIl11i1i1[6][I1lI11lliI1IiliI1II[4] - 256] end if I1lI11lliI1IiliI1II[6] > 255 then I1lI11lliI1IiliI1II[1] = true I1lI11lliI1IiliI1II[10] = Ili1iIl111IIl11i1i1[6][I1lI11lliI1IiliI1II[6] - 256] end end if lI1111iilII1Ii1Ili1 == #{ 6666, 1580, 6906, 5425 } then I1lI11lliI1IiliI1II[5] = Ili1iIl111IIl11i1i1[6][I1lI11lliI1IiliI1II[9]] end if lI1111iilII1Ii1Ili1 == #{4760} and I1lI11lliI1IiliI1II[4] > 255 then I1lI11lliI1IiliI1II[3] = true I1lI11lliI1IiliI1II[2] = Ili1iIl111IIl11i1i1[6][I1lI11lliI1IiliI1II[4] - 256] end if lI1111iilII1Ii1Ili1 == #{304, 832} and I1lI11lliI1IiliI1II[6] > 255 then I1lI11lliI1IiliI1II[1] = true I1lI11lliI1IiliI1II[10] = Ili1iIl111IIl11i1i1[6][I1lI11lliI1IiliI1II[6] - 256] end end i1I1lliiIi11l1lIIII() Ili1iIl111IIl11i1i1[4] = i1I1lliiIi11l1lIIII() lIlllIlillIiI111I11ll() lIlllIlillIiI111I11ll() lIlllIlillIiI111I11ll() i1I1lliiIi11l1lIIII() i1I1lliiIi11l1lIIII() Ili1iIl111IIl11i1i1[1] = i1I1lliiIi11l1lIIII() lIlllIlillIiI111I11ll() return Ili1iIl111IIl11i1i1 end local function i11i1iI111iIiIIIIIi(Ili1iIl111IIl11i1i1, IllilII11lI1iIiIiIl, ii1iiiI1iiiIlIlIIl1) local iIlIlI11II1lllliIil, l1liil1I11il1l1li1l = 3, 7 local I1I1iI1lilIli1illil = Ili1iIl111IIl11i1i1[3] local lIl1IIIlIli1IIi11Il1i = 1 local lIlIIll1iiili1IIiii1i = Ili1iIl111IIl11i1i1[5] local lIlIIl11lIIiill1ll1I1 = Ili1iIl111IIl11i1i1[2] local lIllIi1IiI11I1I11l1II = Ili1iIl111IIl11i1i1[4] local iIiIIiIIiliIlIIil1i = 8 local llI1IIiIII11IIi1liI = Ili1iIl111IIl11i1i1[7] local I1i11111l1illI1iI11 = 4 local function I1IlIlI1IIIilliIll1(...) local lIl1IIili11l1lI1lIi11 = 0 local i1lliIlI1iIIlil1I1I = { lIlllllilIi1i1liiiiiI({}, 1, lIllIi1IiI11I1I11l1II) } local il11lii1Iil1llll1lI = 1 local llli1i1I1ll1i1IIl1l = {} local lliil1ii1111liiil1l = {} local IllilII11lI1iIiIiIl = lIliIl1IiIi1IIII11Ill() local l11IlIlII1iiii11il1 = { ... } local lIlIlI1IllII1iili1l = #l11IlIlII1iiii11il1 - 1 for Ii11I1lIiIII1lliIll = 0, lIlIlI1IllII1iili1l do if Ii11I1lIiIII1lliIll < lIlIIl11lIIiill1ll1I1 then i1lliIlI1iIIlil1I1I[Ii11I1lIiIII1lliIll] = l11IlIlII1iiii11il1[Ii11I1lIiIII1lliIll + 1] end end local function I1Il1l11i1lil1I1II1(...) local lIilIIllII1lliiI1Il = i1llIliIiIiiI11iii1("#", ...) local Illiiililll11iiIlli = { ... } return lIilIIllII1lliiI1Il, Illiiililll11iiIlli end local function IliiIIlll1l11IIlIl1() while true do local ili1i1ilill11iiilIi = I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] local li1IIilIIiIl1l1l11i = ili1i1ilill11iiilIi[8] il11lii1Iil1llll1lI = il11lii1Iil1llll1lI + 1 if li1IIilIIiIl1l1l11i >= 9 then if li1IIilIIiIl1l1l11i < 13 then if li1IIilIIiIl1l1l11i >= 11 then if li1IIilIIiIl1l1l11i == 12 then i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = ili1i1ilill11iiilIi[5] elseif ili1i1ilill11iiilIi[6] == 116 then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI - 1 I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] = { [8] = 3, [7] = (ili1i1ilill11iiilIi[7] - 94) % 256, [4] = (ili1i1ilill11iiilIi[4] - 94) % 256 } else ii1iiiI1iiiIlIlIIl1[ili1i1ilill11iiilIi[4]] = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] end elseif li1IIilIIiIl1l1l11i ~= 10 then if ili1i1ilill11iiilIi[4] == 244 then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI - 1 I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] = { [8] = 5, [7] = (ili1i1ilill11iiilIi[7] - 159) % 256, [6] = (ili1i1ilill11iiilIi[6] - 159) % 256 } elseif not not i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] == (ili1i1ilill11iiilIi[6] == 0) then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI + 1 end else llli1i1I1ll1i1IIl1l[i1lliIlI1iIIlil1I1I] = nil local ilII1lli1liiiIIll11 = ili1i1ilill11iiilIi[7] local II1lIIiiIi1i11lIlil = ili1i1ilill11iiilIi[4] if II1lIIiiIi1i11lIlil == 1 then return true end local ili1l1iIIliIlIiIilI = ilII1lli1liiiIIll11 + II1lIIiiIi1i11lIlil - 2 if II1lIIiiIi1i11lIlil == 0 then ili1l1iIIliIlIiIilI = lIl1IIili11l1lI1lIi11 end return true, ilII1lli1liiiIIll11, ili1l1iIIliIlIiIilI end elseif li1IIilIIiIl1l1l11i < 15 then if li1IIilIIiIl1l1l11i ~= 14 then i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = { lIlllllilIi1i1liiiiiI(IIIil1iii1I1i1I1lil, 1, ili1i1ilill11iiilIi[4] == 0 and 255 or ili1i1ilill11iiilIi[4]) } else local i1liIi1I1IIi1lilI1l = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[4]] local lIilIIllII1lliiI1Il if ili1i1ilill11iiilIi[1] then lIilIIllII1lliiI1Il = ili1i1ilill11iiilIi[10] else lIilIIllII1lliiI1Il = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[6]] end i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7] + 1] = i1liIi1I1IIi1lilI1l i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = i1liIi1I1IIi1lilI1l[lIilIIllII1lliiI1Il] end elseif li1IIilIIiIl1l1l11i < 16 then local ilII1lli1liiiIIll11 = ili1i1ilill11iiilIi[7] local l11IlIlII1iiii11il1 = ili1i1ilill11iiilIi[4] local I1Ii1iIIiiillII11Ii = ili1i1ilill11iiilIi[6] local i11iIli1llll1iiIlll, ili1l1iIIliIlIiIilI, IliiIIlll1l11IIlIl1 if l11IlIlII1iiii11il1 ~= 1 then if l11IlIlII1iiii11il1 ~= 0 then ili1l1iIIliIlIiIilI = ilII1lli1liiiIIll11 + l11IlIlII1iiii11il1 - 1 else ili1l1iIIliIlIiIilI = lIl1IIili11l1lI1lIi11 end ili1l1iIIliIlIiIilI, i11iIli1llll1iiIlll = I1Il1l11i1lil1I1II1(i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11](lIlllllilIi1i1liiiiiI(i1lliIlI1iIIlil1I1I, ilII1lli1liiiIIll11 + 1, ili1l1iIIliIlIiIilI))) else ili1l1iIIliIlIiIilI, i11iIli1llll1iiIlll = I1Il1l11i1lil1I1II1(i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11]()) end if I1Ii1iIIiiillII11Ii ~= 1 then if I1Ii1iIIiiillII11Ii ~= 0 then ili1l1iIIliIlIiIilI = ilII1lli1liiiIIll11 + I1Ii1iIIiiillII11Ii - 2 lIl1IIili11l1lI1lIi11 = ili1l1iIIliIlIiIilI + 1 else ili1l1iIIliIlIiIilI = ili1l1iIIliIlIiIilI + ilII1lli1liiiIIll11 - 1 lIl1IIili11l1lI1lIi11 = ili1l1iIIliIlIiIilI end IliiIIlll1l11IIlIl1 = 0 for Ii11I1lIiIII1lliIll = ilII1lli1liiiIIll11, ili1l1iIIliIlIiIilI do IliiIIlll1l11IIlIl1 = IliiIIlll1l11IIlIl1 + 1 i1lliIlI1iIIlil1I1I[Ii11I1lIiIII1lliIll] = i11iIli1llll1iiIlll[IliiIIlll1l11IIlIl1] end else lIl1IIili11l1lI1lIi11 = ilII1lli1liiiIIll11 - 1 end for Ii11I1lIiIII1lliIll = lIl1IIili11l1lI1lIi11 + 1, lIllIi1IiI11I1I11l1II do i1lliIlI1iIIlil1I1I[Ii11I1lIiIII1lliIll] = nil end elseif li1IIilIIiIl1l1l11i ~= 17 then local I1lIlIiliIIIIIllIli = lIlIIll1iiili1IIiii1i[ili1i1ilill11iiilIi[9]] local ii1ilI1liI1lliIIiiI = {} if I1lIlIiliIIIIIllIli[lIl1IIIlIli1IIi11Il1i] > 0 then do local IiiIIililIiliI11111 = {} ii1ilI1liI1lliIIiiI = II11IilIii1ilIi1Ii1({}, { __index = function(Illiiililll11iiIlli, lIlIIlilIliiI111I11ii) local liIIIlll1lli1lli1I1 = IiiIIililIiliI11111[lIlIIlilIliiI111I11ii] return liIIIlll1lli1lli1I1[1][liIIIlll1lli1lli1I1[2]] end, __newindex = function(Illiiililll11iiIlli, lIlIIlilIliiI111I11ii, l1llliiIiIlIllll1iI) local liIIIlll1lli1lli1I1 = IiiIIililIiliI11111[lIlIIlilIliiI111I11ii] liIIIlll1lli1lli1I1[1][liIIIlll1lli1lli1I1[2]] = l1llliiIiIlIllll1iI end }) for Ii11I1lIiIII1lliIll = 1, I1lIlIiliIIIIIllIli[lIl1IIIlIli1IIi11Il1i] do local il1IlIIl1II1ll1iill = I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] if il1IlIIl1II1ll1iill[iIiIIiIIiliIlIIil1i] == iIlIlI11II1lllliIil then IiiIIililIiliI11111[Ii11I1lIiIII1lliIll - 1] = { i1lliIlI1iIIlil1I1I, il1IlIIl1II1ll1iill[I1i11111l1illI1iI11] } elseif il1IlIIl1II1ll1iill[iIiIIiIIiliIlIIil1i] == l1liil1I11il1l1li1l then IiiIIililIiliI11111[Ii11I1lIiIII1lliIll - 1] = { ii1iiiI1iiiIlIlIIl1, il1IlIIl1II1ll1iill[I1i11111l1illI1iI11] } end il11lii1Iil1llll1lI = il11lii1Iil1llll1lI + 1 end if not llli1i1I1ll1i1IIl1l[i1lliIlI1iIIlil1I1I] then llli1i1I1ll1i1IIl1l[i1lliIlI1iIIlil1I1I] = {IiiIIililIiliI11111} else i1Illlii1I11II1l1i1(llli1i1I1ll1i1IIl1l[i1lliIlI1iIIlil1I1I], IiiIIililIiliI11111) end end end local IIliII1llii11ilIIl1 = i11i1iI111iIiIIIIIi(I1lIlIiliIIIIIllIli, IllilII11lI1iIiIiIl, ii1ilI1liI1lliIIiiI) i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = IIliII1llii11ilIIl1 else i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = IllilII11lI1iIiIiIl[ili1i1ilill11iiilIi[5]] end elseif li1IIilIIiIl1l1l11i >= 4 then if li1IIilIIiIl1l1l11i >= 6 then if li1IIilIIiIl1l1l11i < 7 then local lIilIIllII1lliiI1Il if ili1i1ilill11iiilIi[1] then lIilIIllII1lliiI1Il = ili1i1ilill11iiilIi[10] else lIilIIllII1lliiI1Il = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[6]] end i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[4]][lIilIIllII1lliiI1Il] elseif li1IIilIIiIl1l1l11i ~= 8 then i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = ii1iiiI1iiiIlIlIIl1[ili1i1ilill11iiilIi[4]] else IllilII11lI1iIiIiIl[ili1i1ilill11iiilIi[5]] = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] end elseif li1IIilIIiIl1l1l11i ~= 5 then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI + (ili1i1ilill11iiilIi[9] - lIl1IIlIi1l1illIIIl1l) elseif ili1i1ilill11iiilIi[4] == 207 then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI - 1 I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] = { [8] = 7, [7] = (ili1i1ilill11iiilIi[7] - 183) % 256, [4] = (ili1i1ilill11iiilIi[6] - 183) % 256 } else local ilII1lli1liiiIIll11 = ili1i1ilill11iiilIi[7] local lIli1I1iIlIiI1llIiiil = ilII1lli1liiiIIll11 + 2 local liIliiiIII1il1I1Iii = { i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11](i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11 + 1], i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11 + 2]) } for Ii11I1lIiIII1lliIll = 1, ili1i1ilill11iiilIi[6] do i1lliIlI1iIIlil1I1I[lIli1I1iIlIiI1llIiiil + Ii11I1lIiIII1lliIll] = liIliiiIII1il1I1Iii[Ii11I1lIiIII1lliIll] end if i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11 + 3] ~= nil then i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11 + 2] = i1lliIlI1iIIlil1I1I[ilII1lli1liiiIIll11 + 3] else il11lii1Iil1llll1lI = il11lii1Iil1llll1lI + 1 end end elseif li1IIilIIiIl1l1l11i >= 2 then if li1IIilIIiIl1l1l11i ~= 3 then if ili1i1ilill11iiilIi[6] == 189 then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI - 1 I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] = { [8] = 9, [7] = (ili1i1ilill11iiilIi[7] - 167) % 256, [6] = (ili1i1ilill11iiilIi[4] - 167) % 256 } elseif ili1i1ilill11iiilIi[6] == 240 then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI - 1 I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] = { [8] = 10, [7] = (ili1i1ilill11iiilIi[7] - 183) % 256, [4] = (ili1i1ilill11iiilIi[4] - 183) % 256 } else local lIlliliIl1IiiIi1li1I1 = ili1i1ilill11iiilIi[7] local lIlii1l1lIlIl1iii1111 = {} for l1iI1il1IiiiIIIliII, IiiIIililIiliI11111 in pairs(llli1i1I1ll1i1IIl1l[i1lliIlI1iIIlil1I1I]) do for l1iI1il1IiiiIIIliII, liIIIlll1lli1lli1I1 in pairs(IiiIIililIiliI11111) do if liIIIlll1lli1lli1I1[1] == i1lliIlI1iIIlil1I1I and lIlliliIl1IiiIi1li1I1 <= liIIIlll1lli1lli1I1[2] then local IIi11l1il1lI1lliiII = liIIIlll1lli1lli1I1[2] if not lIlii1l1lIlIl1iii1111[IIi11l1il1lI1lliiII] then i11i1iI111iIiIIIIIi(lliil1ii1111liiil1l, i1lliIlI1iIIlil1I1I[IIi11l1il1lI1lliiII]) lIlii1l1lIlIl1iii1111[IIi11l1il1lI1lliiII] = #lliil1ii1111liiil1l end liIIIlll1lli1lli1I1[1] = lliil1ii1111liiil1l liIIIlll1lli1lli1I1[2] = lIlii1l1lIlIl1iii1111[IIi11l1il1lI1lliiII] end end end end else i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]] = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[4]] end elseif li1IIilIIiIl1l1l11i == 1 then local lIlliIi1l11l11l1llIil, lIilIIllII1lliiI1Il if ili1i1ilill11iiilIi[3] then lIlliIi1l11l11l1llIil = ili1i1ilill11iiilIi[2] else lIlliIi1l11l11l1llIil = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[4]] end if ili1i1ilill11iiilIi[1] then lIilIIllII1lliiI1Il = ili1i1ilill11iiilIi[10] else lIilIIllII1lliiI1Il = i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[6]] end i1lliIlI1iIIlil1I1I[ili1i1ilill11iiilIi[7]][lIlliIi1l11l11l1llIil] = lIilIIllII1lliiI1Il elseif ili1i1ilill11iiilIi[6] == 199 then il11lii1Iil1llll1lI = il11lii1Iil1llll1lI - 1 I1I1iI1lilIli1illil[il11lii1Iil1llll1lI] = { [8] = 2, [7] = (ili1i1ilill11iiilIi[7] - 213) % 256, [4] = (ili1i1ilill11iiilIi[4] - 213) % 256 } else for Ii11I1lIiIII1lliIll = ili1i1ilill11iiilIi[7], ili1i1ilill11iiilIi[4] do i1lliIlI1iIIlil1I1I[Ii11I1lIiIII1lliIll] = nil end end end end local iIiIlI1iiiiIIiII1iI, l1llIIiii111lilii1i, lIlliliIl1IiiIi1li1I1, l1iili11iiilIi11lii = lIlIlIIlli1ll111IilIi(IliiIIlll1l11IIlIl1) if iIiIlI1iiiiIIiII1iI then if lIlliliIl1IiiIi1li1I1 then return lIlllllilIi1i1liiiiiI(i1lliIlI1iIIlil1I1I, lIlliliIl1IiiIi1li1I1, l1iili11iiilIi11lii) end else Illi1Ili11iIiIiIii1("Luraph Script:" .. (llI1IIiIII11IIi1liI[il11lii1Iil1llll1lI - 1] or "") .. ": " .. iI1II1I1iiI1Il111i1(l1llIIiii111lilii1i), 0) end end l1l11llI1111llIIIii(I1IlIlI1IIIilliIll1, IllilII11lI1iIiIiIl) return I1IlIlI1IIIilliIll1 end local lIlii1l1lIlIl1iii1111 = il1iIIIlll1iIiilIii() return i11i1iI111iIiIIIIIi(lIlii1l1lIlIl1iii1111, IllilII11lI1iIiIiIl)() end iIIlilIIiiIiIIiliillIliIl1IiIi1IIII11Ill()) 
